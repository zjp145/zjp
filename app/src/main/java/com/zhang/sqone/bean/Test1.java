// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test1.proto

package com.zhang.sqone.bean;

public final class Test1 {
  private Test1() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ReqTest11OrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string ac = 1;
    /**
     * <code>optional string ac = 1;</code>
     *
     * <pre>
     *请求标识
     * </pre>
     */
    boolean hasAc();
    /**
     * <code>optional string ac = 1;</code>
     *
     * <pre>
     *请求标识
     * </pre>
     */
    java.lang.String getAc();
    /**
     * <code>optional string ac = 1;</code>
     *
     * <pre>
     *请求标识
     * </pre>
     */
    com.google.protobuf.ByteString
        getAcBytes();

    // optional string id = 2;
    /**
     * <code>optional string id = 2;</code>
     *
     * <pre>
     *ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional string id = 2;</code>
     *
     * <pre>
     *ID
     * </pre>
     */
    java.lang.String getId();
    /**
     * <code>optional string id = 2;</code>
     *
     * <pre>
     *ID
     * </pre>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    // optional string stu = 3;
    /**
     * <code>optional string stu = 3;</code>
     *
     * <pre>
     *请求返回标识
     * </pre>
     */
    boolean hasStu();
    /**
     * <code>optional string stu = 3;</code>
     *
     * <pre>
     *请求返回标识
     * </pre>
     */
    java.lang.String getStu();
    /**
     * <code>optional string stu = 3;</code>
     *
     * <pre>
     *请求返回标识
     * </pre>
     */
    com.google.protobuf.ByteString
        getStuBytes();

    // optional string scd = 4;
    /**
     * <code>optional string scd = 4;</code>
     *
     * <pre>
     *请求结果标识
     * </pre>
     */
    boolean hasScd();
    /**
     * <code>optional string scd = 4;</code>
     *
     * <pre>
     *请求结果标识
     * </pre>
     */
    java.lang.String getScd();
    /**
     * <code>optional string scd = 4;</code>
     *
     * <pre>
     *请求结果标识
     * </pre>
     */
    com.google.protobuf.ByteString
        getScdBytes();

    // optional string msg = 7;
    /**
     * <code>optional string msg = 7;</code>
     *
     * <pre>
     *请求结果消息
     * </pre>
     */
    boolean hasMsg();
    /**
     * <code>optional string msg = 7;</code>
     *
     * <pre>
     *请求结果消息
     * </pre>
     */
    java.lang.String getMsg();
    /**
     * <code>optional string msg = 7;</code>
     *
     * <pre>
     *请求结果消息
     * </pre>
     */
    com.google.protobuf.ByteString
        getMsgBytes();

    // optional string sid = 8;
    /**
     * <code>optional string sid = 8;</code>
     *
     * <pre>
     *请求的用户sid
     * </pre>
     */
    boolean hasSid();
    /**
     * <code>optional string sid = 8;</code>
     *
     * <pre>
     *请求的用户sid
     * </pre>
     */
    java.lang.String getSid();
    /**
     * <code>optional string sid = 8;</code>
     *
     * <pre>
     *请求的用户sid
     * </pre>
     */
    com.google.protobuf.ByteString
        getSidBytes();

    // optional string dcode = 11;
    /**
     * <code>optional string dcode = 11;</code>
     *
     * <pre>
     *科室code
     * </pre>
     */
    boolean hasDcode();
    /**
     * <code>optional string dcode = 11;</code>
     *
     * <pre>
     *科室code
     * </pre>
     */
    java.lang.String getDcode();
    /**
     * <code>optional string dcode = 11;</code>
     *
     * <pre>
     *科室code
     * </pre>
     */
    com.google.protobuf.ByteString
        getDcodeBytes();

    // optional string p = 12;
    /**
     * <code>optional string p = 12;</code>
     *
     * <pre>
     *当前页数
     * </pre>
     */
    boolean hasP();
    /**
     * <code>optional string p = 12;</code>
     *
     * <pre>
     *当前页数
     * </pre>
     */
    java.lang.String getP();
    /**
     * <code>optional string p = 12;</code>
     *
     * <pre>
     *当前页数
     * </pre>
     */
    com.google.protobuf.ByteString
        getPBytes();

    // repeated .ReqTest11.Test11Map test11list = 6;
    /**
     * <code>repeated .ReqTest11.Test11Map test11list = 6;</code>
     *
     * <pre>
     *获取列表
     * </pre>
     */
    java.util.List<com.zhang.sqone.bean.Test1.ReqTest11.Test11Map> 
        getTest11ListList();
    /**
     * <code>repeated .ReqTest11.Test11Map test11list = 6;</code>
     *
     * <pre>
     *获取列表
     * </pre>
     */
    com.zhang.sqone.bean.Test1.ReqTest11.Test11Map getTest11List(int index);
    /**
     * <code>repeated .ReqTest11.Test11Map test11list = 6;</code>
     *
     * <pre>
     *获取列表
     * </pre>
     */
    int getTest11ListCount();
    /**
     * <code>repeated .ReqTest11.Test11Map test11list = 6;</code>
     *
     * <pre>
     *获取列表
     * </pre>
     */
    java.util.List<? extends com.zhang.sqone.bean.Test1.ReqTest11.Test11MapOrBuilder> 
        getTest11ListOrBuilderList();
    /**
     * <code>repeated .ReqTest11.Test11Map test11list = 6;</code>
     *
     * <pre>
     *获取列表
     * </pre>
     */
    com.zhang.sqone.bean.Test1.ReqTest11.Test11MapOrBuilder getTest11ListOrBuilder(
        int index);

    // optional .ReqTest11.Test11Map b = 13;
    /**
     * <code>optional .ReqTest11.Test11Map b = 13;</code>
     *
     * <pre>
     *对象2
     * </pre>
     */
    boolean hasB();
    /**
     * <code>optional .ReqTest11.Test11Map b = 13;</code>
     *
     * <pre>
     *对象2
     * </pre>
     */
    com.zhang.sqone.bean.Test1.ReqTest11.Test11Map getB();
    /**
     * <code>optional .ReqTest11.Test11Map b = 13;</code>
     *
     * <pre>
     *对象2
     * </pre>
     */
    com.zhang.sqone.bean.Test1.ReqTest11.Test11MapOrBuilder getBOrBuilder();
  }
  /**
   * Protobuf type {@code ReqTest11}
   *
   * <pre>
   *科室工作
   * </pre>
   */
  public static final class ReqTest11 extends
      com.google.protobuf.GeneratedMessage
      implements ReqTest11OrBuilder {
    // Use ReqTest11.newBuilder() to construct.
    private ReqTest11(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ReqTest11(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ReqTest11 defaultInstance;
    public static ReqTest11 getDefaultInstance() {
      return defaultInstance;
    }

    public ReqTest11 getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ReqTest11(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              ac_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              id_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              stu_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              scd_ = input.readBytes();
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                test11List_ = new java.util.ArrayList<com.zhang.sqone.bean.Test1.ReqTest11.Test11Map>();
                mutable_bitField0_ |= 0x00000100;
              }
              test11List_.add(input.readMessage(com.zhang.sqone.bean.Test1.ReqTest11.Test11Map.PARSER, extensionRegistry));
              break;
            }
            case 58: {
              bitField0_ |= 0x00000010;
              msg_ = input.readBytes();
              break;
            }
            case 66: {
              bitField0_ |= 0x00000020;
              sid_ = input.readBytes();
              break;
            }
            case 90: {
              bitField0_ |= 0x00000040;
              dcode_ = input.readBytes();
              break;
            }
            case 98: {
              bitField0_ |= 0x00000080;
              p_ = input.readBytes();
              break;
            }
            case 106: {
              com.zhang.sqone.bean.Test1.ReqTest11.Test11Map.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = b_.toBuilder();
              }
              b_ = input.readMessage(com.zhang.sqone.bean.Test1.ReqTest11.Test11Map.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(b_);
                b_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          test11List_ = java.util.Collections.unmodifiableList(test11List_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.zhang.sqone.bean.Test1.internal_static_ReqTest11_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.zhang.sqone.bean.Test1.internal_static_ReqTest11_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.zhang.sqone.bean.Test1.ReqTest11.class, com.zhang.sqone.bean.Test1.ReqTest11.Builder.class);
    }

    public static com.google.protobuf.Parser<ReqTest11> PARSER =
        new com.google.protobuf.AbstractParser<ReqTest11>() {
      public ReqTest11 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ReqTest11(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ReqTest11> getParserForType() {
      return PARSER;
    }

    public interface Test11MapOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional string ts = 1;
      /**
       * <code>optional string ts = 1;</code>
       *
       * <pre>
       *提示信息
       * </pre>
       */
      boolean hasTs();
      /**
       * <code>optional string ts = 1;</code>
       *
       * <pre>
       *提示信息
       * </pre>
       */
      java.lang.String getTs();
      /**
       * <code>optional string ts = 1;</code>
       *
       * <pre>
       *提示信息
       * </pre>
       */
      com.google.protobuf.ByteString
          getTsBytes();
    }
    /**
     * Protobuf type {@code ReqTest11.Test11Map}
     */
    public static final class Test11Map extends
        com.google.protobuf.GeneratedMessage
        implements Test11MapOrBuilder {
      // Use Test11Map.newBuilder() to construct.
      private Test11Map(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Test11Map(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Test11Map defaultInstance;
      public static Test11Map getDefaultInstance() {
        return defaultInstance;
      }

      public Test11Map getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Test11Map(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                ts_ = input.readBytes();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.zhang.sqone.bean.Test1.internal_static_ReqTest11_Test11Map_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.zhang.sqone.bean.Test1.internal_static_ReqTest11_Test11Map_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.zhang.sqone.bean.Test1.ReqTest11.Test11Map.class, com.zhang.sqone.bean.Test1.ReqTest11.Test11Map.Builder.class);
      }

      public static com.google.protobuf.Parser<Test11Map> PARSER =
          new com.google.protobuf.AbstractParser<Test11Map>() {
        public Test11Map parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Test11Map(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Test11Map> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional string ts = 1;
      public static final int TS_FIELD_NUMBER = 1;
      private java.lang.Object ts_;
      /**
       * <code>optional string ts = 1;</code>
       *
       * <pre>
       *提示信息
       * </pre>
       */
      public boolean hasTs() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string ts = 1;</code>
       *
       * <pre>
       *提示信息
       * </pre>
       */
      public java.lang.String getTs() {
        java.lang.Object ref = ts_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            ts_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string ts = 1;</code>
       *
       * <pre>
       *提示信息
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTsBytes() {
        java.lang.Object ref = ts_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ts_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private void initFields() {
        ts_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getTsBytes());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getTsBytes());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.zhang.sqone.bean.Test1.ReqTest11.Test11Map parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.zhang.sqone.bean.Test1.ReqTest11.Test11Map parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.zhang.sqone.bean.Test1.ReqTest11.Test11Map parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.zhang.sqone.bean.Test1.ReqTest11.Test11Map parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.zhang.sqone.bean.Test1.ReqTest11.Test11Map parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.zhang.sqone.bean.Test1.ReqTest11.Test11Map parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.zhang.sqone.bean.Test1.ReqTest11.Test11Map parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.zhang.sqone.bean.Test1.ReqTest11.Test11Map parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.zhang.sqone.bean.Test1.ReqTest11.Test11Map parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.zhang.sqone.bean.Test1.ReqTest11.Test11Map parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.zhang.sqone.bean.Test1.ReqTest11.Test11Map prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code ReqTest11.Test11Map}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements com.zhang.sqone.bean.Test1.ReqTest11.Test11MapOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.zhang.sqone.bean.Test1.internal_static_ReqTest11_Test11Map_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.zhang.sqone.bean.Test1.internal_static_ReqTest11_Test11Map_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.zhang.sqone.bean.Test1.ReqTest11.Test11Map.class, com.zhang.sqone.bean.Test1.ReqTest11.Test11Map.Builder.class);
        }

        // Construct using com.zhang.sqone.bean.Test1.ReqTest11.Test11Map.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          ts_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.zhang.sqone.bean.Test1.internal_static_ReqTest11_Test11Map_descriptor;
        }

        public com.zhang.sqone.bean.Test1.ReqTest11.Test11Map getDefaultInstanceForType() {
          return com.zhang.sqone.bean.Test1.ReqTest11.Test11Map.getDefaultInstance();
        }

        public com.zhang.sqone.bean.Test1.ReqTest11.Test11Map build() {
          com.zhang.sqone.bean.Test1.ReqTest11.Test11Map result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.zhang.sqone.bean.Test1.ReqTest11.Test11Map buildPartial() {
          com.zhang.sqone.bean.Test1.ReqTest11.Test11Map result = new com.zhang.sqone.bean.Test1.ReqTest11.Test11Map(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.ts_ = ts_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.zhang.sqone.bean.Test1.ReqTest11.Test11Map) {
            return mergeFrom((com.zhang.sqone.bean.Test1.ReqTest11.Test11Map)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.zhang.sqone.bean.Test1.ReqTest11.Test11Map other) {
          if (other == com.zhang.sqone.bean.Test1.ReqTest11.Test11Map.getDefaultInstance()) return this;
          if (other.hasTs()) {
            bitField0_ |= 0x00000001;
            ts_ = other.ts_;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.zhang.sqone.bean.Test1.ReqTest11.Test11Map parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.zhang.sqone.bean.Test1.ReqTest11.Test11Map) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional string ts = 1;
        private java.lang.Object ts_ = "";
        /**
         * <code>optional string ts = 1;</code>
         *
         * <pre>
         *提示信息
         * </pre>
         */
        public boolean hasTs() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional string ts = 1;</code>
         *
         * <pre>
         *提示信息
         * </pre>
         */
        public java.lang.String getTs() {
          java.lang.Object ref = ts_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            ts_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string ts = 1;</code>
         *
         * <pre>
         *提示信息
         * </pre>
         */
        public com.google.protobuf.ByteString
            getTsBytes() {
          java.lang.Object ref = ts_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            ts_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string ts = 1;</code>
         *
         * <pre>
         *提示信息
         * </pre>
         */
        public Builder setTs(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          ts_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string ts = 1;</code>
         *
         * <pre>
         *提示信息
         * </pre>
         */
        public Builder clearTs() {
          bitField0_ = (bitField0_ & ~0x00000001);
          ts_ = getDefaultInstance().getTs();
          onChanged();
          return this;
        }
        /**
         * <code>optional string ts = 1;</code>
         *
         * <pre>
         *提示信息
         * </pre>
         */
        public Builder setTsBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          ts_ = value;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:ReqTest11.Test11Map)
      }

      static {
        defaultInstance = new Test11Map(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:ReqTest11.Test11Map)
    }

    private int bitField0_;
    // optional string ac = 1;
    public static final int AC_FIELD_NUMBER = 1;
    private java.lang.Object ac_;
    /**
     * <code>optional string ac = 1;</code>
     *
     * <pre>
     *请求标识
     * </pre>
     */
    public boolean hasAc() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string ac = 1;</code>
     *
     * <pre>
     *请求标识
     * </pre>
     */
    public java.lang.String getAc() {
      java.lang.Object ref = ac_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ac_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ac = 1;</code>
     *
     * <pre>
     *请求标识
     * </pre>
     */
    public com.google.protobuf.ByteString
        getAcBytes() {
      java.lang.Object ref = ac_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ac_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string id = 2;
    public static final int ID_FIELD_NUMBER = 2;
    private java.lang.Object id_;
    /**
     * <code>optional string id = 2;</code>
     *
     * <pre>
     *ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string id = 2;</code>
     *
     * <pre>
     *ID
     * </pre>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          id_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string id = 2;</code>
     *
     * <pre>
     *ID
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string stu = 3;
    public static final int STU_FIELD_NUMBER = 3;
    private java.lang.Object stu_;
    /**
     * <code>optional string stu = 3;</code>
     *
     * <pre>
     *请求返回标识
     * </pre>
     */
    public boolean hasStu() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string stu = 3;</code>
     *
     * <pre>
     *请求返回标识
     * </pre>
     */
    public java.lang.String getStu() {
      java.lang.Object ref = stu_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          stu_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string stu = 3;</code>
     *
     * <pre>
     *请求返回标识
     * </pre>
     */
    public com.google.protobuf.ByteString
        getStuBytes() {
      java.lang.Object ref = stu_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        stu_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string scd = 4;
    public static final int SCD_FIELD_NUMBER = 4;
    private java.lang.Object scd_;
    /**
     * <code>optional string scd = 4;</code>
     *
     * <pre>
     *请求结果标识
     * </pre>
     */
    public boolean hasScd() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string scd = 4;</code>
     *
     * <pre>
     *请求结果标识
     * </pre>
     */
    public java.lang.String getScd() {
      java.lang.Object ref = scd_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          scd_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string scd = 4;</code>
     *
     * <pre>
     *请求结果标识
     * </pre>
     */
    public com.google.protobuf.ByteString
        getScdBytes() {
      java.lang.Object ref = scd_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        scd_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string msg = 7;
    public static final int MSG_FIELD_NUMBER = 7;
    private java.lang.Object msg_;
    /**
     * <code>optional string msg = 7;</code>
     *
     * <pre>
     *请求结果消息
     * </pre>
     */
    public boolean hasMsg() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string msg = 7;</code>
     *
     * <pre>
     *请求结果消息
     * </pre>
     */
    public java.lang.String getMsg() {
      java.lang.Object ref = msg_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msg_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string msg = 7;</code>
     *
     * <pre>
     *请求结果消息
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMsgBytes() {
      java.lang.Object ref = msg_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msg_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string sid = 8;
    public static final int SID_FIELD_NUMBER = 8;
    private java.lang.Object sid_;
    /**
     * <code>optional string sid = 8;</code>
     *
     * <pre>
     *请求的用户sid
     * </pre>
     */
    public boolean hasSid() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string sid = 8;</code>
     *
     * <pre>
     *请求的用户sid
     * </pre>
     */
    public java.lang.String getSid() {
      java.lang.Object ref = sid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          sid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string sid = 8;</code>
     *
     * <pre>
     *请求的用户sid
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSidBytes() {
      java.lang.Object ref = sid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string dcode = 11;
    public static final int DCODE_FIELD_NUMBER = 11;
    private java.lang.Object dcode_;
    /**
     * <code>optional string dcode = 11;</code>
     *
     * <pre>
     *科室code
     * </pre>
     */
    public boolean hasDcode() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string dcode = 11;</code>
     *
     * <pre>
     *科室code
     * </pre>
     */
    public java.lang.String getDcode() {
      java.lang.Object ref = dcode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          dcode_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string dcode = 11;</code>
     *
     * <pre>
     *科室code
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDcodeBytes() {
      java.lang.Object ref = dcode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dcode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string p = 12;
    public static final int P_FIELD_NUMBER = 12;
    private java.lang.Object p_;
    /**
     * <code>optional string p = 12;</code>
     *
     * <pre>
     *当前页数
     * </pre>
     */
    public boolean hasP() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string p = 12;</code>
     *
     * <pre>
     *当前页数
     * </pre>
     */
    public java.lang.String getP() {
      java.lang.Object ref = p_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          p_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string p = 12;</code>
     *
     * <pre>
     *当前页数
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPBytes() {
      java.lang.Object ref = p_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        p_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .ReqTest11.Test11Map test11list = 6;
    public static final int TEST11LIST_FIELD_NUMBER = 6;
    private java.util.List<com.zhang.sqone.bean.Test1.ReqTest11.Test11Map> test11List_;
    /**
     * <code>repeated .ReqTest11.Test11Map test11list = 6;</code>
     *
     * <pre>
     *获取列表
     * </pre>
     */
    public java.util.List<com.zhang.sqone.bean.Test1.ReqTest11.Test11Map> getTest11ListList() {
      return test11List_;
    }
    /**
     * <code>repeated .ReqTest11.Test11Map test11list = 6;</code>
     *
     * <pre>
     *获取列表
     * </pre>
     */
    public java.util.List<? extends com.zhang.sqone.bean.Test1.ReqTest11.Test11MapOrBuilder> 
        getTest11ListOrBuilderList() {
      return test11List_;
    }
    /**
     * <code>repeated .ReqTest11.Test11Map test11list = 6;</code>
     *
     * <pre>
     *获取列表
     * </pre>
     */
    public int getTest11ListCount() {
      return test11List_.size();
    }
    /**
     * <code>repeated .ReqTest11.Test11Map test11list = 6;</code>
     *
     * <pre>
     *获取列表
     * </pre>
     */
    public com.zhang.sqone.bean.Test1.ReqTest11.Test11Map getTest11List(int index) {
      return test11List_.get(index);
    }
    /**
     * <code>repeated .ReqTest11.Test11Map test11list = 6;</code>
     *
     * <pre>
     *获取列表
     * </pre>
     */
    public com.zhang.sqone.bean.Test1.ReqTest11.Test11MapOrBuilder getTest11ListOrBuilder(
        int index) {
      return test11List_.get(index);
    }

    // optional .ReqTest11.Test11Map b = 13;
    public static final int B_FIELD_NUMBER = 13;
    private com.zhang.sqone.bean.Test1.ReqTest11.Test11Map b_;
    /**
     * <code>optional .ReqTest11.Test11Map b = 13;</code>
     *
     * <pre>
     *对象2
     * </pre>
     */
    public boolean hasB() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .ReqTest11.Test11Map b = 13;</code>
     *
     * <pre>
     *对象2
     * </pre>
     */
    public com.zhang.sqone.bean.Test1.ReqTest11.Test11Map getB() {
      return b_;
    }
    /**
     * <code>optional .ReqTest11.Test11Map b = 13;</code>
     *
     * <pre>
     *对象2
     * </pre>
     */
    public com.zhang.sqone.bean.Test1.ReqTest11.Test11MapOrBuilder getBOrBuilder() {
      return b_;
    }

    private void initFields() {
      ac_ = "";
      id_ = "";
      stu_ = "";
      scd_ = "";
      msg_ = "";
      sid_ = "";
      dcode_ = "";
      p_ = "";
      test11List_ = java.util.Collections.emptyList();
      b_ = com.zhang.sqone.bean.Test1.ReqTest11.Test11Map.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getAcBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getStuBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getScdBytes());
      }
      for (int i = 0; i < test11List_.size(); i++) {
        output.writeMessage(6, test11List_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(7, getMsgBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(8, getSidBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(11, getDcodeBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(12, getPBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(13, b_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getAcBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getStuBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getScdBytes());
      }
      for (int i = 0; i < test11List_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, test11List_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getMsgBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getSidBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getDcodeBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, getPBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, b_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.zhang.sqone.bean.Test1.ReqTest11 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.zhang.sqone.bean.Test1.ReqTest11 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.zhang.sqone.bean.Test1.ReqTest11 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.zhang.sqone.bean.Test1.ReqTest11 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.zhang.sqone.bean.Test1.ReqTest11 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.zhang.sqone.bean.Test1.ReqTest11 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.zhang.sqone.bean.Test1.ReqTest11 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.zhang.sqone.bean.Test1.ReqTest11 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.zhang.sqone.bean.Test1.ReqTest11 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.zhang.sqone.bean.Test1.ReqTest11 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.zhang.sqone.bean.Test1.ReqTest11 prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ReqTest11}
     *
     * <pre>
     *科室工作
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.zhang.sqone.bean.Test1.ReqTest11OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.zhang.sqone.bean.Test1.internal_static_ReqTest11_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.zhang.sqone.bean.Test1.internal_static_ReqTest11_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.zhang.sqone.bean.Test1.ReqTest11.class, com.zhang.sqone.bean.Test1.ReqTest11.Builder.class);
      }

      // Construct using com.zhang.sqone.bean.Test1.ReqTest11.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTest11ListFieldBuilder();
          getBFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        ac_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        stu_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        scd_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        msg_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        sid_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        dcode_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        p_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        if (test11ListBuilder_ == null) {
          test11List_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          test11ListBuilder_.clear();
        }
        if (bBuilder_ == null) {
          b_ = com.zhang.sqone.bean.Test1.ReqTest11.Test11Map.getDefaultInstance();
        } else {
          bBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.zhang.sqone.bean.Test1.internal_static_ReqTest11_descriptor;
      }

      public com.zhang.sqone.bean.Test1.ReqTest11 getDefaultInstanceForType() {
        return com.zhang.sqone.bean.Test1.ReqTest11.getDefaultInstance();
      }

      public com.zhang.sqone.bean.Test1.ReqTest11 build() {
        com.zhang.sqone.bean.Test1.ReqTest11 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.zhang.sqone.bean.Test1.ReqTest11 buildPartial() {
        com.zhang.sqone.bean.Test1.ReqTest11 result = new com.zhang.sqone.bean.Test1.ReqTest11(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ac_ = ac_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.stu_ = stu_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.scd_ = scd_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.msg_ = msg_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.sid_ = sid_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.dcode_ = dcode_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.p_ = p_;
        if (test11ListBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            test11List_ = java.util.Collections.unmodifiableList(test11List_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.test11List_ = test11List_;
        } else {
          result.test11List_ = test11ListBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        if (bBuilder_ == null) {
          result.b_ = b_;
        } else {
          result.b_ = bBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.zhang.sqone.bean.Test1.ReqTest11) {
          return mergeFrom((com.zhang.sqone.bean.Test1.ReqTest11)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.zhang.sqone.bean.Test1.ReqTest11 other) {
        if (other == com.zhang.sqone.bean.Test1.ReqTest11.getDefaultInstance()) return this;
        if (other.hasAc()) {
          bitField0_ |= 0x00000001;
          ac_ = other.ac_;
          onChanged();
        }
        if (other.hasId()) {
          bitField0_ |= 0x00000002;
          id_ = other.id_;
          onChanged();
        }
        if (other.hasStu()) {
          bitField0_ |= 0x00000004;
          stu_ = other.stu_;
          onChanged();
        }
        if (other.hasScd()) {
          bitField0_ |= 0x00000008;
          scd_ = other.scd_;
          onChanged();
        }
        if (other.hasMsg()) {
          bitField0_ |= 0x00000010;
          msg_ = other.msg_;
          onChanged();
        }
        if (other.hasSid()) {
          bitField0_ |= 0x00000020;
          sid_ = other.sid_;
          onChanged();
        }
        if (other.hasDcode()) {
          bitField0_ |= 0x00000040;
          dcode_ = other.dcode_;
          onChanged();
        }
        if (other.hasP()) {
          bitField0_ |= 0x00000080;
          p_ = other.p_;
          onChanged();
        }
        if (test11ListBuilder_ == null) {
          if (!other.test11List_.isEmpty()) {
            if (test11List_.isEmpty()) {
              test11List_ = other.test11List_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureTest11ListIsMutable();
              test11List_.addAll(other.test11List_);
            }
            onChanged();
          }
        } else {
          if (!other.test11List_.isEmpty()) {
            if (test11ListBuilder_.isEmpty()) {
              test11ListBuilder_.dispose();
              test11ListBuilder_ = null;
              test11List_ = other.test11List_;
              bitField0_ = (bitField0_ & ~0x00000100);
              test11ListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTest11ListFieldBuilder() : null;
            } else {
              test11ListBuilder_.addAllMessages(other.test11List_);
            }
          }
        }
        if (other.hasB()) {
          mergeB(other.getB());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.zhang.sqone.bean.Test1.ReqTest11 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.zhang.sqone.bean.Test1.ReqTest11) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string ac = 1;
      private java.lang.Object ac_ = "";
      /**
       * <code>optional string ac = 1;</code>
       *
       * <pre>
       *请求标识
       * </pre>
       */
      public boolean hasAc() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string ac = 1;</code>
       *
       * <pre>
       *请求标识
       * </pre>
       */
      public java.lang.String getAc() {
        java.lang.Object ref = ac_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ac_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ac = 1;</code>
       *
       * <pre>
       *请求标识
       * </pre>
       */
      public com.google.protobuf.ByteString
          getAcBytes() {
        java.lang.Object ref = ac_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ac_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ac = 1;</code>
       *
       * <pre>
       *请求标识
       * </pre>
       */
      public Builder setAc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        ac_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ac = 1;</code>
       *
       * <pre>
       *请求标识
       * </pre>
       */
      public Builder clearAc() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ac_ = getDefaultInstance().getAc();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ac = 1;</code>
       *
       * <pre>
       *请求标识
       * </pre>
       */
      public Builder setAcBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        ac_ = value;
        onChanged();
        return this;
      }

      // optional string id = 2;
      private java.lang.Object id_ = "";
      /**
       * <code>optional string id = 2;</code>
       *
       * <pre>
       *ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string id = 2;</code>
       *
       * <pre>
       *ID
       * </pre>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string id = 2;</code>
       *
       * <pre>
       *ID
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string id = 2;</code>
       *
       * <pre>
       *ID
       * </pre>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string id = 2;</code>
       *
       * <pre>
       *ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string id = 2;</code>
       *
       * <pre>
       *ID
       * </pre>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        id_ = value;
        onChanged();
        return this;
      }

      // optional string stu = 3;
      private java.lang.Object stu_ = "";
      /**
       * <code>optional string stu = 3;</code>
       *
       * <pre>
       *请求返回标识
       * </pre>
       */
      public boolean hasStu() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string stu = 3;</code>
       *
       * <pre>
       *请求返回标识
       * </pre>
       */
      public java.lang.String getStu() {
        java.lang.Object ref = stu_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          stu_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string stu = 3;</code>
       *
       * <pre>
       *请求返回标识
       * </pre>
       */
      public com.google.protobuf.ByteString
          getStuBytes() {
        java.lang.Object ref = stu_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stu_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string stu = 3;</code>
       *
       * <pre>
       *请求返回标识
       * </pre>
       */
      public Builder setStu(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        stu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string stu = 3;</code>
       *
       * <pre>
       *请求返回标识
       * </pre>
       */
      public Builder clearStu() {
        bitField0_ = (bitField0_ & ~0x00000004);
        stu_ = getDefaultInstance().getStu();
        onChanged();
        return this;
      }
      /**
       * <code>optional string stu = 3;</code>
       *
       * <pre>
       *请求返回标识
       * </pre>
       */
      public Builder setStuBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        stu_ = value;
        onChanged();
        return this;
      }

      // optional string scd = 4;
      private java.lang.Object scd_ = "";
      /**
       * <code>optional string scd = 4;</code>
       *
       * <pre>
       *请求结果标识
       * </pre>
       */
      public boolean hasScd() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string scd = 4;</code>
       *
       * <pre>
       *请求结果标识
       * </pre>
       */
      public java.lang.String getScd() {
        java.lang.Object ref = scd_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          scd_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string scd = 4;</code>
       *
       * <pre>
       *请求结果标识
       * </pre>
       */
      public com.google.protobuf.ByteString
          getScdBytes() {
        java.lang.Object ref = scd_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          scd_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string scd = 4;</code>
       *
       * <pre>
       *请求结果标识
       * </pre>
       */
      public Builder setScd(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        scd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string scd = 4;</code>
       *
       * <pre>
       *请求结果标识
       * </pre>
       */
      public Builder clearScd() {
        bitField0_ = (bitField0_ & ~0x00000008);
        scd_ = getDefaultInstance().getScd();
        onChanged();
        return this;
      }
      /**
       * <code>optional string scd = 4;</code>
       *
       * <pre>
       *请求结果标识
       * </pre>
       */
      public Builder setScdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        scd_ = value;
        onChanged();
        return this;
      }

      // optional string msg = 7;
      private java.lang.Object msg_ = "";
      /**
       * <code>optional string msg = 7;</code>
       *
       * <pre>
       *请求结果消息
       * </pre>
       */
      public boolean hasMsg() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string msg = 7;</code>
       *
       * <pre>
       *请求结果消息
       * </pre>
       */
      public java.lang.String getMsg() {
        java.lang.Object ref = msg_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          msg_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string msg = 7;</code>
       *
       * <pre>
       *请求结果消息
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMsgBytes() {
        java.lang.Object ref = msg_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msg_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string msg = 7;</code>
       *
       * <pre>
       *请求结果消息
       * </pre>
       */
      public Builder setMsg(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        msg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string msg = 7;</code>
       *
       * <pre>
       *请求结果消息
       * </pre>
       */
      public Builder clearMsg() {
        bitField0_ = (bitField0_ & ~0x00000010);
        msg_ = getDefaultInstance().getMsg();
        onChanged();
        return this;
      }
      /**
       * <code>optional string msg = 7;</code>
       *
       * <pre>
       *请求结果消息
       * </pre>
       */
      public Builder setMsgBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        msg_ = value;
        onChanged();
        return this;
      }

      // optional string sid = 8;
      private java.lang.Object sid_ = "";
      /**
       * <code>optional string sid = 8;</code>
       *
       * <pre>
       *请求的用户sid
       * </pre>
       */
      public boolean hasSid() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string sid = 8;</code>
       *
       * <pre>
       *请求的用户sid
       * </pre>
       */
      public java.lang.String getSid() {
        java.lang.Object ref = sid_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          sid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string sid = 8;</code>
       *
       * <pre>
       *请求的用户sid
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSidBytes() {
        java.lang.Object ref = sid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string sid = 8;</code>
       *
       * <pre>
       *请求的用户sid
       * </pre>
       */
      public Builder setSid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        sid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string sid = 8;</code>
       *
       * <pre>
       *请求的用户sid
       * </pre>
       */
      public Builder clearSid() {
        bitField0_ = (bitField0_ & ~0x00000020);
        sid_ = getDefaultInstance().getSid();
        onChanged();
        return this;
      }
      /**
       * <code>optional string sid = 8;</code>
       *
       * <pre>
       *请求的用户sid
       * </pre>
       */
      public Builder setSidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        sid_ = value;
        onChanged();
        return this;
      }

      // optional string dcode = 11;
      private java.lang.Object dcode_ = "";
      /**
       * <code>optional string dcode = 11;</code>
       *
       * <pre>
       *科室code
       * </pre>
       */
      public boolean hasDcode() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string dcode = 11;</code>
       *
       * <pre>
       *科室code
       * </pre>
       */
      public java.lang.String getDcode() {
        java.lang.Object ref = dcode_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          dcode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string dcode = 11;</code>
       *
       * <pre>
       *科室code
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDcodeBytes() {
        java.lang.Object ref = dcode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dcode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string dcode = 11;</code>
       *
       * <pre>
       *科室code
       * </pre>
       */
      public Builder setDcode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        dcode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string dcode = 11;</code>
       *
       * <pre>
       *科室code
       * </pre>
       */
      public Builder clearDcode() {
        bitField0_ = (bitField0_ & ~0x00000040);
        dcode_ = getDefaultInstance().getDcode();
        onChanged();
        return this;
      }
      /**
       * <code>optional string dcode = 11;</code>
       *
       * <pre>
       *科室code
       * </pre>
       */
      public Builder setDcodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        dcode_ = value;
        onChanged();
        return this;
      }

      // optional string p = 12;
      private java.lang.Object p_ = "";
      /**
       * <code>optional string p = 12;</code>
       *
       * <pre>
       *当前页数
       * </pre>
       */
      public boolean hasP() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string p = 12;</code>
       *
       * <pre>
       *当前页数
       * </pre>
       */
      public java.lang.String getP() {
        java.lang.Object ref = p_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          p_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string p = 12;</code>
       *
       * <pre>
       *当前页数
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPBytes() {
        java.lang.Object ref = p_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          p_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string p = 12;</code>
       *
       * <pre>
       *当前页数
       * </pre>
       */
      public Builder setP(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        p_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string p = 12;</code>
       *
       * <pre>
       *当前页数
       * </pre>
       */
      public Builder clearP() {
        bitField0_ = (bitField0_ & ~0x00000080);
        p_ = getDefaultInstance().getP();
        onChanged();
        return this;
      }
      /**
       * <code>optional string p = 12;</code>
       *
       * <pre>
       *当前页数
       * </pre>
       */
      public Builder setPBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        p_ = value;
        onChanged();
        return this;
      }

      // repeated .ReqTest11.Test11Map test11list = 6;
      private java.util.List<com.zhang.sqone.bean.Test1.ReqTest11.Test11Map> test11List_ =
        java.util.Collections.emptyList();
      private void ensureTest11ListIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          test11List_ = new java.util.ArrayList<com.zhang.sqone.bean.Test1.ReqTest11.Test11Map>(test11List_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.zhang.sqone.bean.Test1.ReqTest11.Test11Map, com.zhang.sqone.bean.Test1.ReqTest11.Test11Map.Builder, com.zhang.sqone.bean.Test1.ReqTest11.Test11MapOrBuilder> test11ListBuilder_;

      /**
       * <code>repeated .ReqTest11.Test11Map test11list = 6;</code>
       *
       * <pre>
       *获取列表
       * </pre>
       */
      public java.util.List<com.zhang.sqone.bean.Test1.ReqTest11.Test11Map> getTest11ListList() {
        if (test11ListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(test11List_);
        } else {
          return test11ListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ReqTest11.Test11Map test11list = 6;</code>
       *
       * <pre>
       *获取列表
       * </pre>
       */
      public int getTest11ListCount() {
        if (test11ListBuilder_ == null) {
          return test11List_.size();
        } else {
          return test11ListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ReqTest11.Test11Map test11list = 6;</code>
       *
       * <pre>
       *获取列表
       * </pre>
       */
      public com.zhang.sqone.bean.Test1.ReqTest11.Test11Map getTest11List(int index) {
        if (test11ListBuilder_ == null) {
          return test11List_.get(index);
        } else {
          return test11ListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ReqTest11.Test11Map test11list = 6;</code>
       *
       * <pre>
       *获取列表
       * </pre>
       */
      public Builder setTest11List(
          int index, com.zhang.sqone.bean.Test1.ReqTest11.Test11Map value) {
        if (test11ListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTest11ListIsMutable();
          test11List_.set(index, value);
          onChanged();
        } else {
          test11ListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ReqTest11.Test11Map test11list = 6;</code>
       *
       * <pre>
       *获取列表
       * </pre>
       */
      public Builder setTest11List(
          int index, com.zhang.sqone.bean.Test1.ReqTest11.Test11Map.Builder builderForValue) {
        if (test11ListBuilder_ == null) {
          ensureTest11ListIsMutable();
          test11List_.set(index, builderForValue.build());
          onChanged();
        } else {
          test11ListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ReqTest11.Test11Map test11list = 6;</code>
       *
       * <pre>
       *获取列表
       * </pre>
       */
      public Builder addTest11List(com.zhang.sqone.bean.Test1.ReqTest11.Test11Map value) {
        if (test11ListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTest11ListIsMutable();
          test11List_.add(value);
          onChanged();
        } else {
          test11ListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ReqTest11.Test11Map test11list = 6;</code>
       *
       * <pre>
       *获取列表
       * </pre>
       */
      public Builder addTest11List(
          int index, com.zhang.sqone.bean.Test1.ReqTest11.Test11Map value) {
        if (test11ListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTest11ListIsMutable();
          test11List_.add(index, value);
          onChanged();
        } else {
          test11ListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ReqTest11.Test11Map test11list = 6;</code>
       *
       * <pre>
       *获取列表
       * </pre>
       */
      public Builder addTest11List(
          com.zhang.sqone.bean.Test1.ReqTest11.Test11Map.Builder builderForValue) {
        if (test11ListBuilder_ == null) {
          ensureTest11ListIsMutable();
          test11List_.add(builderForValue.build());
          onChanged();
        } else {
          test11ListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ReqTest11.Test11Map test11list = 6;</code>
       *
       * <pre>
       *获取列表
       * </pre>
       */
      public Builder addTest11List(
          int index, com.zhang.sqone.bean.Test1.ReqTest11.Test11Map.Builder builderForValue) {
        if (test11ListBuilder_ == null) {
          ensureTest11ListIsMutable();
          test11List_.add(index, builderForValue.build());
          onChanged();
        } else {
          test11ListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ReqTest11.Test11Map test11list = 6;</code>
       *
       * <pre>
       *获取列表
       * </pre>
       */
      public Builder addAllTest11List(
          java.lang.Iterable<? extends com.zhang.sqone.bean.Test1.ReqTest11.Test11Map> values) {
        if (test11ListBuilder_ == null) {
          ensureTest11ListIsMutable();
          super.addAll(values, test11List_);
          onChanged();
        } else {
          test11ListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ReqTest11.Test11Map test11list = 6;</code>
       *
       * <pre>
       *获取列表
       * </pre>
       */
      public Builder clearTest11List() {
        if (test11ListBuilder_ == null) {
          test11List_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          test11ListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ReqTest11.Test11Map test11list = 6;</code>
       *
       * <pre>
       *获取列表
       * </pre>
       */
      public Builder removeTest11List(int index) {
        if (test11ListBuilder_ == null) {
          ensureTest11ListIsMutable();
          test11List_.remove(index);
          onChanged();
        } else {
          test11ListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ReqTest11.Test11Map test11list = 6;</code>
       *
       * <pre>
       *获取列表
       * </pre>
       */
      public com.zhang.sqone.bean.Test1.ReqTest11.Test11Map.Builder getTest11ListBuilder(
          int index) {
        return getTest11ListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ReqTest11.Test11Map test11list = 6;</code>
       *
       * <pre>
       *获取列表
       * </pre>
       */
      public com.zhang.sqone.bean.Test1.ReqTest11.Test11MapOrBuilder getTest11ListOrBuilder(
          int index) {
        if (test11ListBuilder_ == null) {
          return test11List_.get(index);  } else {
          return test11ListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ReqTest11.Test11Map test11list = 6;</code>
       *
       * <pre>
       *获取列表
       * </pre>
       */
      public java.util.List<? extends com.zhang.sqone.bean.Test1.ReqTest11.Test11MapOrBuilder> 
           getTest11ListOrBuilderList() {
        if (test11ListBuilder_ != null) {
          return test11ListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(test11List_);
        }
      }
      /**
       * <code>repeated .ReqTest11.Test11Map test11list = 6;</code>
       *
       * <pre>
       *获取列表
       * </pre>
       */
      public com.zhang.sqone.bean.Test1.ReqTest11.Test11Map.Builder addTest11ListBuilder() {
        return getTest11ListFieldBuilder().addBuilder(
            com.zhang.sqone.bean.Test1.ReqTest11.Test11Map.getDefaultInstance());
      }
      /**
       * <code>repeated .ReqTest11.Test11Map test11list = 6;</code>
       *
       * <pre>
       *获取列表
       * </pre>
       */
      public com.zhang.sqone.bean.Test1.ReqTest11.Test11Map.Builder addTest11ListBuilder(
          int index) {
        return getTest11ListFieldBuilder().addBuilder(
            index, com.zhang.sqone.bean.Test1.ReqTest11.Test11Map.getDefaultInstance());
      }
      /**
       * <code>repeated .ReqTest11.Test11Map test11list = 6;</code>
       *
       * <pre>
       *获取列表
       * </pre>
       */
      public java.util.List<com.zhang.sqone.bean.Test1.ReqTest11.Test11Map.Builder> 
           getTest11ListBuilderList() {
        return getTest11ListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.zhang.sqone.bean.Test1.ReqTest11.Test11Map, com.zhang.sqone.bean.Test1.ReqTest11.Test11Map.Builder, com.zhang.sqone.bean.Test1.ReqTest11.Test11MapOrBuilder> 
          getTest11ListFieldBuilder() {
        if (test11ListBuilder_ == null) {
          test11ListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.zhang.sqone.bean.Test1.ReqTest11.Test11Map, com.zhang.sqone.bean.Test1.ReqTest11.Test11Map.Builder, com.zhang.sqone.bean.Test1.ReqTest11.Test11MapOrBuilder>(
                  test11List_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          test11List_ = null;
        }
        return test11ListBuilder_;
      }

      // optional .ReqTest11.Test11Map b = 13;
      private com.zhang.sqone.bean.Test1.ReqTest11.Test11Map b_ = com.zhang.sqone.bean.Test1.ReqTest11.Test11Map.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.zhang.sqone.bean.Test1.ReqTest11.Test11Map, com.zhang.sqone.bean.Test1.ReqTest11.Test11Map.Builder, com.zhang.sqone.bean.Test1.ReqTest11.Test11MapOrBuilder> bBuilder_;
      /**
       * <code>optional .ReqTest11.Test11Map b = 13;</code>
       *
       * <pre>
       *对象2
       * </pre>
       */
      public boolean hasB() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .ReqTest11.Test11Map b = 13;</code>
       *
       * <pre>
       *对象2
       * </pre>
       */
      public com.zhang.sqone.bean.Test1.ReqTest11.Test11Map getB() {
        if (bBuilder_ == null) {
          return b_;
        } else {
          return bBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .ReqTest11.Test11Map b = 13;</code>
       *
       * <pre>
       *对象2
       * </pre>
       */
      public Builder setB(com.zhang.sqone.bean.Test1.ReqTest11.Test11Map value) {
        if (bBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          b_ = value;
          onChanged();
        } else {
          bBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .ReqTest11.Test11Map b = 13;</code>
       *
       * <pre>
       *对象2
       * </pre>
       */
      public Builder setB(
          com.zhang.sqone.bean.Test1.ReqTest11.Test11Map.Builder builderForValue) {
        if (bBuilder_ == null) {
          b_ = builderForValue.build();
          onChanged();
        } else {
          bBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .ReqTest11.Test11Map b = 13;</code>
       *
       * <pre>
       *对象2
       * </pre>
       */
      public Builder mergeB(com.zhang.sqone.bean.Test1.ReqTest11.Test11Map value) {
        if (bBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              b_ != com.zhang.sqone.bean.Test1.ReqTest11.Test11Map.getDefaultInstance()) {
            b_ =
              com.zhang.sqone.bean.Test1.ReqTest11.Test11Map.newBuilder(b_).mergeFrom(value).buildPartial();
          } else {
            b_ = value;
          }
          onChanged();
        } else {
          bBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .ReqTest11.Test11Map b = 13;</code>
       *
       * <pre>
       *对象2
       * </pre>
       */
      public Builder clearB() {
        if (bBuilder_ == null) {
          b_ = com.zhang.sqone.bean.Test1.ReqTest11.Test11Map.getDefaultInstance();
          onChanged();
        } else {
          bBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .ReqTest11.Test11Map b = 13;</code>
       *
       * <pre>
       *对象2
       * </pre>
       */
      public com.zhang.sqone.bean.Test1.ReqTest11.Test11Map.Builder getBBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getBFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .ReqTest11.Test11Map b = 13;</code>
       *
       * <pre>
       *对象2
       * </pre>
       */
      public com.zhang.sqone.bean.Test1.ReqTest11.Test11MapOrBuilder getBOrBuilder() {
        if (bBuilder_ != null) {
          return bBuilder_.getMessageOrBuilder();
        } else {
          return b_;
        }
      }
      /**
       * <code>optional .ReqTest11.Test11Map b = 13;</code>
       *
       * <pre>
       *对象2
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.zhang.sqone.bean.Test1.ReqTest11.Test11Map, com.zhang.sqone.bean.Test1.ReqTest11.Test11Map.Builder, com.zhang.sqone.bean.Test1.ReqTest11.Test11MapOrBuilder> 
          getBFieldBuilder() {
        if (bBuilder_ == null) {
          bBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.zhang.sqone.bean.Test1.ReqTest11.Test11Map, com.zhang.sqone.bean.Test1.ReqTest11.Test11Map.Builder, com.zhang.sqone.bean.Test1.ReqTest11.Test11MapOrBuilder>(
                  b_,
                  getParentForChildren(),
                  isClean());
          b_ = null;
        }
        return bBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:ReqTest11)
    }

    static {
      defaultInstance = new ReqTest11(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ReqTest11)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ReqTest11_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ReqTest11_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ReqTest11_Test11Map_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ReqTest11_Test11Map_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013test1.proto\"\325\001\n\tReqTest11\022\n\n\002ac\030\001 \001(\t\022" +
      "\n\n\002id\030\002 \001(\t\022\013\n\003stu\030\003 \001(\t\022\013\n\003scd\030\004 \001(\t\022\013\n" +
      "\003msg\030\007 \001(\t\022\013\n\003sid\030\010 \001(\t\022\r\n\005dcode\030\013 \001(\t\022\t" +
      "\n\001p\030\014 \001(\t\022(\n\ntest11list\030\006 \003(\0132\024.ReqTest1" +
      "1.Test11Map\022\037\n\001b\030\r \001(\0132\024.ReqTest11.Test1" +
      "1Map\032\027\n\tTest11Map\022\n\n\002ts\030\001 \001(\tB\026\n\024com.zha" +
      "ng.sqone.bean"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_ReqTest11_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_ReqTest11_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ReqTest11_descriptor,
              new java.lang.String[] { "Ac", "Id", "Stu", "Scd", "Msg", "Sid", "Dcode", "P", "Test11List", "B", });
          internal_static_ReqTest11_Test11Map_descriptor =
            internal_static_ReqTest11_descriptor.getNestedTypes().get(0);
          internal_static_ReqTest11_Test11Map_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ReqTest11_Test11Map_descriptor,
              new java.lang.String[] { "Ts", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
