// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

package com.zhang.sqone.bean;

public final class Test {
  private Test() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface PersonOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string name = 1;
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     *添加的是必填属性(required)
     * </pre>
     */
    boolean hasName();
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     *添加的是必填属性(required)
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     *添加的是必填属性(required)
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // required int32 id = 2;
    /**
     * <code>required int32 id = 2;</code>
     */
    boolean hasId();
    /**
     * <code>required int32 id = 2;</code>
     */
    int getId();

    // optional string email = 3;
    /**
     * <code>optional string email = 3;</code>
     *
     * <pre>
     *添加的是非必填属性（optional）
     * </pre>
     */
    boolean hasEmail();
    /**
     * <code>optional string email = 3;</code>
     *
     * <pre>
     *添加的是非必填属性（optional）
     * </pre>
     */
    java.lang.String getEmail();
    /**
     * <code>optional string email = 3;</code>
     *
     * <pre>
     *添加的是非必填属性（optional）
     * </pre>
     */
    com.google.protobuf.ByteString
        getEmailBytes();

    // repeated .Person.PhoneNumber phone = 4;
    /**
     * <code>repeated .Person.PhoneNumber phone = 4;</code>
     *
     * <pre>
     *声明是一个集合的数据类型
     * </pre>
     */
    java.util.List<com.zhang.sqone.bean.Test.Person.PhoneNumber> 
        getPhoneList();
    /**
     * <code>repeated .Person.PhoneNumber phone = 4;</code>
     *
     * <pre>
     *声明是一个集合的数据类型
     * </pre>
     */
    com.zhang.sqone.bean.Test.Person.PhoneNumber getPhone(int index);
    /**
     * <code>repeated .Person.PhoneNumber phone = 4;</code>
     *
     * <pre>
     *声明是一个集合的数据类型
     * </pre>
     */
    int getPhoneCount();
    /**
     * <code>repeated .Person.PhoneNumber phone = 4;</code>
     *
     * <pre>
     *声明是一个集合的数据类型
     * </pre>
     */
    java.util.List<? extends com.zhang.sqone.bean.Test.Person.PhoneNumberOrBuilder> 
        getPhoneOrBuilderList();
    /**
     * <code>repeated .Person.PhoneNumber phone = 4;</code>
     *
     * <pre>
     *声明是一个集合的数据类型
     * </pre>
     */
    com.zhang.sqone.bean.Test.Person.PhoneNumberOrBuilder getPhoneOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code Person}
   *
   * <pre>
   *官方案例
   * </pre>
   */
  public static final class Person extends
      com.google.protobuf.GeneratedMessage
      implements PersonOrBuilder {
    // Use Person.newBuilder() to construct.
    private Person(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Person(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Person defaultInstance;
    public static Person getDefaultInstance() {
      return defaultInstance;
    }

    public Person getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Person(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              id_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              email_ = input.readBytes();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                phone_ = new java.util.ArrayList<com.zhang.sqone.bean.Test.Person.PhoneNumber>();
                mutable_bitField0_ |= 0x00000008;
              }
              phone_.add(input.readMessage(com.zhang.sqone.bean.Test.Person.PhoneNumber.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          phone_ = java.util.Collections.unmodifiableList(phone_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.zhang.sqone.bean.Test.internal_static_Person_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.zhang.sqone.bean.Test.internal_static_Person_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.zhang.sqone.bean.Test.Person.class, com.zhang.sqone.bean.Test.Person.Builder.class);
    }

    public static com.google.protobuf.Parser<Person> PARSER =
        new com.google.protobuf.AbstractParser<Person>() {
      public Person parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Person(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Person> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code Person.PhoneType}
     *
     * <pre>
     *一个数据类型（枚举数据类型）
     * </pre>
     */
    public enum PhoneType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>MOBILE = 0;</code>
       */
      MOBILE(0, 0),
      /**
       * <code>HOME = 1;</code>
       */
      HOME(1, 1),
      /**
       * <code>WORK = 2;</code>
       */
      WORK(2, 2),
      ;

      /**
       * <code>MOBILE = 0;</code>
       */
      public static final int MOBILE_VALUE = 0;
      /**
       * <code>HOME = 1;</code>
       */
      public static final int HOME_VALUE = 1;
      /**
       * <code>WORK = 2;</code>
       */
      public static final int WORK_VALUE = 2;


      public final int getNumber() { return value; }

      public static PhoneType valueOf(int value) {
        switch (value) {
          case 0: return MOBILE;
          case 1: return HOME;
          case 2: return WORK;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<PhoneType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<PhoneType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<PhoneType>() {
              public PhoneType findValueByNumber(int number) {
                return PhoneType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.zhang.sqone.bean.Test.Person.getDescriptor().getEnumTypes().get(0);
      }

      private static final PhoneType[] VALUES = values();

      public static PhoneType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private PhoneType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:Person.PhoneType)
    }

    public interface PhoneNumberOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required string number = 1;
      /**
       * <code>required string number = 1;</code>
       */
      boolean hasNumber();
      /**
       * <code>required string number = 1;</code>
       */
      java.lang.String getNumber();
      /**
       * <code>required string number = 1;</code>
       */
      com.google.protobuf.ByteString
          getNumberBytes();

      // optional .Person.PhoneType type = 2 [default = HOME];
      /**
       * <code>optional .Person.PhoneType type = 2 [default = HOME];</code>
       */
      boolean hasType();
      /**
       * <code>optional .Person.PhoneType type = 2 [default = HOME];</code>
       */
      com.zhang.sqone.bean.Test.Person.PhoneType getType();
    }
    /**
     * Protobuf type {@code Person.PhoneNumber}
     *
     * <pre>
     *一个数据类型（正常的数据类型）
     * </pre>
     */
    public static final class PhoneNumber extends
        com.google.protobuf.GeneratedMessage
        implements PhoneNumberOrBuilder {
      // Use PhoneNumber.newBuilder() to construct.
      private PhoneNumber(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private PhoneNumber(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final PhoneNumber defaultInstance;
      public static PhoneNumber getDefaultInstance() {
        return defaultInstance;
      }

      public PhoneNumber getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private PhoneNumber(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                number_ = input.readBytes();
                break;
              }
              case 16: {
                int rawValue = input.readEnum();
                com.zhang.sqone.bean.Test.Person.PhoneType value = com.zhang.sqone.bean.Test.Person.PhoneType.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(2, rawValue);
                } else {
                  bitField0_ |= 0x00000002;
                  type_ = value;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.zhang.sqone.bean.Test.internal_static_Person_PhoneNumber_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.zhang.sqone.bean.Test.internal_static_Person_PhoneNumber_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.zhang.sqone.bean.Test.Person.PhoneNumber.class, com.zhang.sqone.bean.Test.Person.PhoneNumber.Builder.class);
      }

      public static com.google.protobuf.Parser<PhoneNumber> PARSER =
          new com.google.protobuf.AbstractParser<PhoneNumber>() {
        public PhoneNumber parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new PhoneNumber(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<PhoneNumber> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required string number = 1;
      public static final int NUMBER_FIELD_NUMBER = 1;
      private java.lang.Object number_;
      /**
       * <code>required string number = 1;</code>
       */
      public boolean hasNumber() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string number = 1;</code>
       */
      public java.lang.String getNumber() {
        java.lang.Object ref = number_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            number_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string number = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNumberBytes() {
        java.lang.Object ref = number_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          number_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // optional .Person.PhoneType type = 2 [default = HOME];
      public static final int TYPE_FIELD_NUMBER = 2;
      private com.zhang.sqone.bean.Test.Person.PhoneType type_;
      /**
       * <code>optional .Person.PhoneType type = 2 [default = HOME];</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .Person.PhoneType type = 2 [default = HOME];</code>
       */
      public com.zhang.sqone.bean.Test.Person.PhoneType getType() {
        return type_;
      }

      private void initFields() {
        number_ = "";
        type_ = com.zhang.sqone.bean.Test.Person.PhoneType.HOME;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasNumber()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getNumberBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeEnum(2, type_.getNumber());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getNumberBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, type_.getNumber());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.zhang.sqone.bean.Test.Person.PhoneNumber parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.zhang.sqone.bean.Test.Person.PhoneNumber parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.zhang.sqone.bean.Test.Person.PhoneNumber parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.zhang.sqone.bean.Test.Person.PhoneNumber parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.zhang.sqone.bean.Test.Person.PhoneNumber parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.zhang.sqone.bean.Test.Person.PhoneNumber parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.zhang.sqone.bean.Test.Person.PhoneNumber parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.zhang.sqone.bean.Test.Person.PhoneNumber parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.zhang.sqone.bean.Test.Person.PhoneNumber parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.zhang.sqone.bean.Test.Person.PhoneNumber parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.zhang.sqone.bean.Test.Person.PhoneNumber prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code Person.PhoneNumber}
       *
       * <pre>
       *一个数据类型（正常的数据类型）
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements com.zhang.sqone.bean.Test.Person.PhoneNumberOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.zhang.sqone.bean.Test.internal_static_Person_PhoneNumber_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.zhang.sqone.bean.Test.internal_static_Person_PhoneNumber_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.zhang.sqone.bean.Test.Person.PhoneNumber.class, com.zhang.sqone.bean.Test.Person.PhoneNumber.Builder.class);
        }

        // Construct using com.zhang.sqone.bean.Test.Person.PhoneNumber.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          number_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          type_ = com.zhang.sqone.bean.Test.Person.PhoneType.HOME;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.zhang.sqone.bean.Test.internal_static_Person_PhoneNumber_descriptor;
        }

        public com.zhang.sqone.bean.Test.Person.PhoneNumber getDefaultInstanceForType() {
          return com.zhang.sqone.bean.Test.Person.PhoneNumber.getDefaultInstance();
        }

        public com.zhang.sqone.bean.Test.Person.PhoneNumber build() {
          com.zhang.sqone.bean.Test.Person.PhoneNumber result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.zhang.sqone.bean.Test.Person.PhoneNumber buildPartial() {
          com.zhang.sqone.bean.Test.Person.PhoneNumber result = new com.zhang.sqone.bean.Test.Person.PhoneNumber(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.number_ = number_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.type_ = type_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.zhang.sqone.bean.Test.Person.PhoneNumber) {
            return mergeFrom((com.zhang.sqone.bean.Test.Person.PhoneNumber)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.zhang.sqone.bean.Test.Person.PhoneNumber other) {
          if (other == com.zhang.sqone.bean.Test.Person.PhoneNumber.getDefaultInstance()) return this;
          if (other.hasNumber()) {
            bitField0_ |= 0x00000001;
            number_ = other.number_;
            onChanged();
          }
          if (other.hasType()) {
            setType(other.getType());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasNumber()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.zhang.sqone.bean.Test.Person.PhoneNumber parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.zhang.sqone.bean.Test.Person.PhoneNumber) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required string number = 1;
        private java.lang.Object number_ = "";
        /**
         * <code>required string number = 1;</code>
         */
        public boolean hasNumber() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required string number = 1;</code>
         */
        public java.lang.String getNumber() {
          java.lang.Object ref = number_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            number_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string number = 1;</code>
         */
        public com.google.protobuf.ByteString
            getNumberBytes() {
          java.lang.Object ref = number_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            number_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string number = 1;</code>
         */
        public Builder setNumber(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          number_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string number = 1;</code>
         */
        public Builder clearNumber() {
          bitField0_ = (bitField0_ & ~0x00000001);
          number_ = getDefaultInstance().getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>required string number = 1;</code>
         */
        public Builder setNumberBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          number_ = value;
          onChanged();
          return this;
        }

        // optional .Person.PhoneType type = 2 [default = HOME];
        private com.zhang.sqone.bean.Test.Person.PhoneType type_ = com.zhang.sqone.bean.Test.Person.PhoneType.HOME;
        /**
         * <code>optional .Person.PhoneType type = 2 [default = HOME];</code>
         */
        public boolean hasType() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional .Person.PhoneType type = 2 [default = HOME];</code>
         */
        public com.zhang.sqone.bean.Test.Person.PhoneType getType() {
          return type_;
        }
        /**
         * <code>optional .Person.PhoneType type = 2 [default = HOME];</code>
         */
        public Builder setType(com.zhang.sqone.bean.Test.Person.PhoneType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000002;
          type_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .Person.PhoneType type = 2 [default = HOME];</code>
         */
        public Builder clearType() {
          bitField0_ = (bitField0_ & ~0x00000002);
          type_ = com.zhang.sqone.bean.Test.Person.PhoneType.HOME;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:Person.PhoneNumber)
      }

      static {
        defaultInstance = new PhoneNumber(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:Person.PhoneNumber)
    }

    private int bitField0_;
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     *添加的是必填属性(required)
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     *添加的是必填属性(required)
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     *添加的是必填属性(required)
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 id = 2;
    public static final int ID_FIELD_NUMBER = 2;
    private int id_;
    /**
     * <code>required int32 id = 2;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 id = 2;</code>
     */
    public int getId() {
      return id_;
    }

    // optional string email = 3;
    public static final int EMAIL_FIELD_NUMBER = 3;
    private java.lang.Object email_;
    /**
     * <code>optional string email = 3;</code>
     *
     * <pre>
     *添加的是非必填属性（optional）
     * </pre>
     */
    public boolean hasEmail() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string email = 3;</code>
     *
     * <pre>
     *添加的是非必填属性（optional）
     * </pre>
     */
    public java.lang.String getEmail() {
      java.lang.Object ref = email_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          email_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string email = 3;</code>
     *
     * <pre>
     *添加的是非必填属性（optional）
     * </pre>
     */
    public com.google.protobuf.ByteString
        getEmailBytes() {
      java.lang.Object ref = email_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        email_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .Person.PhoneNumber phone = 4;
    public static final int PHONE_FIELD_NUMBER = 4;
    private java.util.List<com.zhang.sqone.bean.Test.Person.PhoneNumber> phone_;
    /**
     * <code>repeated .Person.PhoneNumber phone = 4;</code>
     *
     * <pre>
     *声明是一个集合的数据类型
     * </pre>
     */
    public java.util.List<com.zhang.sqone.bean.Test.Person.PhoneNumber> getPhoneList() {
      return phone_;
    }
    /**
     * <code>repeated .Person.PhoneNumber phone = 4;</code>
     *
     * <pre>
     *声明是一个集合的数据类型
     * </pre>
     */
    public java.util.List<? extends com.zhang.sqone.bean.Test.Person.PhoneNumberOrBuilder> 
        getPhoneOrBuilderList() {
      return phone_;
    }
    /**
     * <code>repeated .Person.PhoneNumber phone = 4;</code>
     *
     * <pre>
     *声明是一个集合的数据类型
     * </pre>
     */
    public int getPhoneCount() {
      return phone_.size();
    }
    /**
     * <code>repeated .Person.PhoneNumber phone = 4;</code>
     *
     * <pre>
     *声明是一个集合的数据类型
     * </pre>
     */
    public com.zhang.sqone.bean.Test.Person.PhoneNumber getPhone(int index) {
      return phone_.get(index);
    }
    /**
     * <code>repeated .Person.PhoneNumber phone = 4;</code>
     *
     * <pre>
     *声明是一个集合的数据类型
     * </pre>
     */
    public com.zhang.sqone.bean.Test.Person.PhoneNumberOrBuilder getPhoneOrBuilder(
        int index) {
      return phone_.get(index);
    }

    private void initFields() {
      name_ = "";
      id_ = 0;
      email_ = "";
      phone_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getPhoneCount(); i++) {
        if (!getPhone(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getEmailBytes());
      }
      for (int i = 0; i < phone_.size(); i++) {
        output.writeMessage(4, phone_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getEmailBytes());
      }
      for (int i = 0; i < phone_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, phone_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.zhang.sqone.bean.Test.Person parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.zhang.sqone.bean.Test.Person parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.zhang.sqone.bean.Test.Person parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.zhang.sqone.bean.Test.Person parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.zhang.sqone.bean.Test.Person parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.zhang.sqone.bean.Test.Person parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.zhang.sqone.bean.Test.Person parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.zhang.sqone.bean.Test.Person parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.zhang.sqone.bean.Test.Person parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.zhang.sqone.bean.Test.Person parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.zhang.sqone.bean.Test.Person prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Person}
     *
     * <pre>
     *官方案例
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.zhang.sqone.bean.Test.PersonOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.zhang.sqone.bean.Test.internal_static_Person_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.zhang.sqone.bean.Test.internal_static_Person_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.zhang.sqone.bean.Test.Person.class, com.zhang.sqone.bean.Test.Person.Builder.class);
      }

      // Construct using com.zhang.sqone.bean.Test.Person.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPhoneFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        email_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        if (phoneBuilder_ == null) {
          phone_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          phoneBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.zhang.sqone.bean.Test.internal_static_Person_descriptor;
      }

      public com.zhang.sqone.bean.Test.Person getDefaultInstanceForType() {
        return com.zhang.sqone.bean.Test.Person.getDefaultInstance();
      }

      public com.zhang.sqone.bean.Test.Person build() {
        com.zhang.sqone.bean.Test.Person result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.zhang.sqone.bean.Test.Person buildPartial() {
        com.zhang.sqone.bean.Test.Person result = new com.zhang.sqone.bean.Test.Person(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.email_ = email_;
        if (phoneBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            phone_ = java.util.Collections.unmodifiableList(phone_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.phone_ = phone_;
        } else {
          result.phone_ = phoneBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.zhang.sqone.bean.Test.Person) {
          return mergeFrom((com.zhang.sqone.bean.Test.Person)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.zhang.sqone.bean.Test.Person other) {
        if (other == com.zhang.sqone.bean.Test.Person.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasEmail()) {
          bitField0_ |= 0x00000004;
          email_ = other.email_;
          onChanged();
        }
        if (phoneBuilder_ == null) {
          if (!other.phone_.isEmpty()) {
            if (phone_.isEmpty()) {
              phone_ = other.phone_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensurePhoneIsMutable();
              phone_.addAll(other.phone_);
            }
            onChanged();
          }
        } else {
          if (!other.phone_.isEmpty()) {
            if (phoneBuilder_.isEmpty()) {
              phoneBuilder_.dispose();
              phoneBuilder_ = null;
              phone_ = other.phone_;
              bitField0_ = (bitField0_ & ~0x00000008);
              phoneBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPhoneFieldBuilder() : null;
            } else {
              phoneBuilder_.addAllMessages(other.phone_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (!hasId()) {
          
          return false;
        }
        for (int i = 0; i < getPhoneCount(); i++) {
          if (!getPhone(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.zhang.sqone.bean.Test.Person parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.zhang.sqone.bean.Test.Person) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string name = 1;
      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *添加的是必填属性(required)
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *添加的是必填属性(required)
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *添加的是必填属性(required)
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *添加的是必填属性(required)
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *添加的是必填属性(required)
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *添加的是必填属性(required)
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      // required int32 id = 2;
      private int id_ ;
      /**
       * <code>required int32 id = 2;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 id = 2;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 2;</code>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000002;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 id = 2;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        id_ = 0;
        onChanged();
        return this;
      }

      // optional string email = 3;
      private java.lang.Object email_ = "";
      /**
       * <code>optional string email = 3;</code>
       *
       * <pre>
       *添加的是非必填属性（optional）
       * </pre>
       */
      public boolean hasEmail() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string email = 3;</code>
       *
       * <pre>
       *添加的是非必填属性（optional）
       * </pre>
       */
      public java.lang.String getEmail() {
        java.lang.Object ref = email_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          email_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string email = 3;</code>
       *
       * <pre>
       *添加的是非必填属性（optional）
       * </pre>
       */
      public com.google.protobuf.ByteString
          getEmailBytes() {
        java.lang.Object ref = email_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          email_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string email = 3;</code>
       *
       * <pre>
       *添加的是非必填属性（optional）
       * </pre>
       */
      public Builder setEmail(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        email_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string email = 3;</code>
       *
       * <pre>
       *添加的是非必填属性（optional）
       * </pre>
       */
      public Builder clearEmail() {
        bitField0_ = (bitField0_ & ~0x00000004);
        email_ = getDefaultInstance().getEmail();
        onChanged();
        return this;
      }
      /**
       * <code>optional string email = 3;</code>
       *
       * <pre>
       *添加的是非必填属性（optional）
       * </pre>
       */
      public Builder setEmailBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        email_ = value;
        onChanged();
        return this;
      }

      // repeated .Person.PhoneNumber phone = 4;
      private java.util.List<com.zhang.sqone.bean.Test.Person.PhoneNumber> phone_ =
        java.util.Collections.emptyList();
      private void ensurePhoneIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          phone_ = new java.util.ArrayList<com.zhang.sqone.bean.Test.Person.PhoneNumber>(phone_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.zhang.sqone.bean.Test.Person.PhoneNumber, com.zhang.sqone.bean.Test.Person.PhoneNumber.Builder, com.zhang.sqone.bean.Test.Person.PhoneNumberOrBuilder> phoneBuilder_;

      /**
       * <code>repeated .Person.PhoneNumber phone = 4;</code>
       *
       * <pre>
       *声明是一个集合的数据类型
       * </pre>
       */
      public java.util.List<com.zhang.sqone.bean.Test.Person.PhoneNumber> getPhoneList() {
        if (phoneBuilder_ == null) {
          return java.util.Collections.unmodifiableList(phone_);
        } else {
          return phoneBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Person.PhoneNumber phone = 4;</code>
       *
       * <pre>
       *声明是一个集合的数据类型
       * </pre>
       */
      public int getPhoneCount() {
        if (phoneBuilder_ == null) {
          return phone_.size();
        } else {
          return phoneBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Person.PhoneNumber phone = 4;</code>
       *
       * <pre>
       *声明是一个集合的数据类型
       * </pre>
       */
      public com.zhang.sqone.bean.Test.Person.PhoneNumber getPhone(int index) {
        if (phoneBuilder_ == null) {
          return phone_.get(index);
        } else {
          return phoneBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Person.PhoneNumber phone = 4;</code>
       *
       * <pre>
       *声明是一个集合的数据类型
       * </pre>
       */
      public Builder setPhone(
          int index, com.zhang.sqone.bean.Test.Person.PhoneNumber value) {
        if (phoneBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePhoneIsMutable();
          phone_.set(index, value);
          onChanged();
        } else {
          phoneBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Person.PhoneNumber phone = 4;</code>
       *
       * <pre>
       *声明是一个集合的数据类型
       * </pre>
       */
      public Builder setPhone(
          int index, com.zhang.sqone.bean.Test.Person.PhoneNumber.Builder builderForValue) {
        if (phoneBuilder_ == null) {
          ensurePhoneIsMutable();
          phone_.set(index, builderForValue.build());
          onChanged();
        } else {
          phoneBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Person.PhoneNumber phone = 4;</code>
       *
       * <pre>
       *声明是一个集合的数据类型
       * </pre>
       */
      public Builder addPhone(com.zhang.sqone.bean.Test.Person.PhoneNumber value) {
        if (phoneBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePhoneIsMutable();
          phone_.add(value);
          onChanged();
        } else {
          phoneBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Person.PhoneNumber phone = 4;</code>
       *
       * <pre>
       *声明是一个集合的数据类型
       * </pre>
       */
      public Builder addPhone(
          int index, com.zhang.sqone.bean.Test.Person.PhoneNumber value) {
        if (phoneBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePhoneIsMutable();
          phone_.add(index, value);
          onChanged();
        } else {
          phoneBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Person.PhoneNumber phone = 4;</code>
       *
       * <pre>
       *声明是一个集合的数据类型
       * </pre>
       */
      public Builder addPhone(
          com.zhang.sqone.bean.Test.Person.PhoneNumber.Builder builderForValue) {
        if (phoneBuilder_ == null) {
          ensurePhoneIsMutable();
          phone_.add(builderForValue.build());
          onChanged();
        } else {
          phoneBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Person.PhoneNumber phone = 4;</code>
       *
       * <pre>
       *声明是一个集合的数据类型
       * </pre>
       */
      public Builder addPhone(
          int index, com.zhang.sqone.bean.Test.Person.PhoneNumber.Builder builderForValue) {
        if (phoneBuilder_ == null) {
          ensurePhoneIsMutable();
          phone_.add(index, builderForValue.build());
          onChanged();
        } else {
          phoneBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Person.PhoneNumber phone = 4;</code>
       *
       * <pre>
       *声明是一个集合的数据类型
       * </pre>
       */
      public Builder addAllPhone(
          java.lang.Iterable<? extends com.zhang.sqone.bean.Test.Person.PhoneNumber> values) {
        if (phoneBuilder_ == null) {
          ensurePhoneIsMutable();
          super.addAll(values, phone_);
          onChanged();
        } else {
          phoneBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Person.PhoneNumber phone = 4;</code>
       *
       * <pre>
       *声明是一个集合的数据类型
       * </pre>
       */
      public Builder clearPhone() {
        if (phoneBuilder_ == null) {
          phone_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          phoneBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Person.PhoneNumber phone = 4;</code>
       *
       * <pre>
       *声明是一个集合的数据类型
       * </pre>
       */
      public Builder removePhone(int index) {
        if (phoneBuilder_ == null) {
          ensurePhoneIsMutable();
          phone_.remove(index);
          onChanged();
        } else {
          phoneBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Person.PhoneNumber phone = 4;</code>
       *
       * <pre>
       *声明是一个集合的数据类型
       * </pre>
       */
      public com.zhang.sqone.bean.Test.Person.PhoneNumber.Builder getPhoneBuilder(
          int index) {
        return getPhoneFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Person.PhoneNumber phone = 4;</code>
       *
       * <pre>
       *声明是一个集合的数据类型
       * </pre>
       */
      public com.zhang.sqone.bean.Test.Person.PhoneNumberOrBuilder getPhoneOrBuilder(
          int index) {
        if (phoneBuilder_ == null) {
          return phone_.get(index);  } else {
          return phoneBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Person.PhoneNumber phone = 4;</code>
       *
       * <pre>
       *声明是一个集合的数据类型
       * </pre>
       */
      public java.util.List<? extends com.zhang.sqone.bean.Test.Person.PhoneNumberOrBuilder> 
           getPhoneOrBuilderList() {
        if (phoneBuilder_ != null) {
          return phoneBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(phone_);
        }
      }
      /**
       * <code>repeated .Person.PhoneNumber phone = 4;</code>
       *
       * <pre>
       *声明是一个集合的数据类型
       * </pre>
       */
      public com.zhang.sqone.bean.Test.Person.PhoneNumber.Builder addPhoneBuilder() {
        return getPhoneFieldBuilder().addBuilder(
            com.zhang.sqone.bean.Test.Person.PhoneNumber.getDefaultInstance());
      }
      /**
       * <code>repeated .Person.PhoneNumber phone = 4;</code>
       *
       * <pre>
       *声明是一个集合的数据类型
       * </pre>
       */
      public com.zhang.sqone.bean.Test.Person.PhoneNumber.Builder addPhoneBuilder(
          int index) {
        return getPhoneFieldBuilder().addBuilder(
            index, com.zhang.sqone.bean.Test.Person.PhoneNumber.getDefaultInstance());
      }
      /**
       * <code>repeated .Person.PhoneNumber phone = 4;</code>
       *
       * <pre>
       *声明是一个集合的数据类型
       * </pre>
       */
      public java.util.List<com.zhang.sqone.bean.Test.Person.PhoneNumber.Builder> 
           getPhoneBuilderList() {
        return getPhoneFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.zhang.sqone.bean.Test.Person.PhoneNumber, com.zhang.sqone.bean.Test.Person.PhoneNumber.Builder, com.zhang.sqone.bean.Test.Person.PhoneNumberOrBuilder> 
          getPhoneFieldBuilder() {
        if (phoneBuilder_ == null) {
          phoneBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.zhang.sqone.bean.Test.Person.PhoneNumber, com.zhang.sqone.bean.Test.Person.PhoneNumber.Builder, com.zhang.sqone.bean.Test.Person.PhoneNumberOrBuilder>(
                  phone_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          phone_ = null;
        }
        return phoneBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:Person)
    }

    static {
      defaultInstance = new Person(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Person)
  }

  public interface ReqTestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string ac = 1;
    /**
     * <code>optional string ac = 1;</code>
     *
     * <pre>
     *请求标识
     * </pre>
     */
    boolean hasAc();
    /**
     * <code>optional string ac = 1;</code>
     *
     * <pre>
     *请求标识
     * </pre>
     */
    java.lang.String getAc();
    /**
     * <code>optional string ac = 1;</code>
     *
     * <pre>
     *请求标识
     * </pre>
     */
    com.google.protobuf.ByteString
        getAcBytes();

    // optional string id = 2;
    /**
     * <code>optional string id = 2;</code>
     *
     * <pre>
     *ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional string id = 2;</code>
     *
     * <pre>
     *ID
     * </pre>
     */
    java.lang.String getId();
    /**
     * <code>optional string id = 2;</code>
     *
     * <pre>
     *ID
     * </pre>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    // optional string stu = 3;
    /**
     * <code>optional string stu = 3;</code>
     *
     * <pre>
     *请求返回标识
     * </pre>
     */
    boolean hasStu();
    /**
     * <code>optional string stu = 3;</code>
     *
     * <pre>
     *请求返回标识
     * </pre>
     */
    java.lang.String getStu();
    /**
     * <code>optional string stu = 3;</code>
     *
     * <pre>
     *请求返回标识
     * </pre>
     */
    com.google.protobuf.ByteString
        getStuBytes();

    // optional string scd = 4;
    /**
     * <code>optional string scd = 4;</code>
     *
     * <pre>
     *请求结果标识
     * </pre>
     */
    boolean hasScd();
    /**
     * <code>optional string scd = 4;</code>
     *
     * <pre>
     *请求结果标识
     * </pre>
     */
    java.lang.String getScd();
    /**
     * <code>optional string scd = 4;</code>
     *
     * <pre>
     *请求结果标识
     * </pre>
     */
    com.google.protobuf.ByteString
        getScdBytes();

    // optional string msg = 7;
    /**
     * <code>optional string msg = 7;</code>
     *
     * <pre>
     *请求结果消息
     * </pre>
     */
    boolean hasMsg();
    /**
     * <code>optional string msg = 7;</code>
     *
     * <pre>
     *请求结果消息
     * </pre>
     */
    java.lang.String getMsg();
    /**
     * <code>optional string msg = 7;</code>
     *
     * <pre>
     *请求结果消息
     * </pre>
     */
    com.google.protobuf.ByteString
        getMsgBytes();

    // optional string sid = 8;
    /**
     * <code>optional string sid = 8;</code>
     *
     * <pre>
     *请求的用户sid
     * </pre>
     */
    boolean hasSid();
    /**
     * <code>optional string sid = 8;</code>
     *
     * <pre>
     *请求的用户sid
     * </pre>
     */
    java.lang.String getSid();
    /**
     * <code>optional string sid = 8;</code>
     *
     * <pre>
     *请求的用户sid
     * </pre>
     */
    com.google.protobuf.ByteString
        getSidBytes();

    // optional string name = 9;
    /**
     * <code>optional string name = 9;</code>
     *
     * <pre>
     *测试姓名
     * </pre>
     */
    boolean hasName();
    /**
     * <code>optional string name = 9;</code>
     *
     * <pre>
     *测试姓名
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 9;</code>
     *
     * <pre>
     *测试姓名
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // optional string age = 10;
    /**
     * <code>optional string age = 10;</code>
     *
     * <pre>
     *测试年龄
     * </pre>
     */
    boolean hasAge();
    /**
     * <code>optional string age = 10;</code>
     *
     * <pre>
     *测试年龄
     * </pre>
     */
    java.lang.String getAge();
    /**
     * <code>optional string age = 10;</code>
     *
     * <pre>
     *测试年龄
     * </pre>
     */
    com.google.protobuf.ByteString
        getAgeBytes();

    // repeated .ReqTest.Hobby hobby = 11;
    /**
     * <code>repeated .ReqTest.Hobby hobby = 11;</code>
     *
     * <pre>
     *测试爱好
     * </pre>
     */
    java.util.List<com.zhang.sqone.bean.Test.ReqTest.Hobby> 
        getHobbyList();
    /**
     * <code>repeated .ReqTest.Hobby hobby = 11;</code>
     *
     * <pre>
     *测试爱好
     * </pre>
     */
    com.zhang.sqone.bean.Test.ReqTest.Hobby getHobby(int index);
    /**
     * <code>repeated .ReqTest.Hobby hobby = 11;</code>
     *
     * <pre>
     *测试爱好
     * </pre>
     */
    int getHobbyCount();
    /**
     * <code>repeated .ReqTest.Hobby hobby = 11;</code>
     *
     * <pre>
     *测试爱好
     * </pre>
     */
    java.util.List<? extends com.zhang.sqone.bean.Test.ReqTest.HobbyOrBuilder> 
        getHobbyOrBuilderList();
    /**
     * <code>repeated .ReqTest.Hobby hobby = 11;</code>
     *
     * <pre>
     *测试爱好
     * </pre>
     */
    com.zhang.sqone.bean.Test.ReqTest.HobbyOrBuilder getHobbyOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code ReqTest}
   *
   * <pre>
   *接口测试使用
   * </pre>
   */
  public static final class ReqTest extends
      com.google.protobuf.GeneratedMessage
      implements ReqTestOrBuilder {
    // Use ReqTest.newBuilder() to construct.
    private ReqTest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ReqTest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ReqTest defaultInstance;
    public static ReqTest getDefaultInstance() {
      return defaultInstance;
    }

    public ReqTest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ReqTest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              ac_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              id_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              stu_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              scd_ = input.readBytes();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000010;
              msg_ = input.readBytes();
              break;
            }
            case 66: {
              bitField0_ |= 0x00000020;
              sid_ = input.readBytes();
              break;
            }
            case 74: {
              bitField0_ |= 0x00000040;
              name_ = input.readBytes();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000080;
              age_ = input.readBytes();
              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                hobby_ = new java.util.ArrayList<com.zhang.sqone.bean.Test.ReqTest.Hobby>();
                mutable_bitField0_ |= 0x00000100;
              }
              hobby_.add(input.readMessage(com.zhang.sqone.bean.Test.ReqTest.Hobby.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          hobby_ = java.util.Collections.unmodifiableList(hobby_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.zhang.sqone.bean.Test.internal_static_ReqTest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.zhang.sqone.bean.Test.internal_static_ReqTest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.zhang.sqone.bean.Test.ReqTest.class, com.zhang.sqone.bean.Test.ReqTest.Builder.class);
    }

    public static com.google.protobuf.Parser<ReqTest> PARSER =
        new com.google.protobuf.AbstractParser<ReqTest>() {
      public ReqTest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ReqTest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ReqTest> getParserForType() {
      return PARSER;
    }

    public interface HobbyOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional string exercise = 1;
      /**
       * <code>optional string exercise = 1;</code>
       *
       * <pre>
       *测试运动
       * </pre>
       */
      boolean hasExercise();
      /**
       * <code>optional string exercise = 1;</code>
       *
       * <pre>
       *测试运动
       * </pre>
       */
      java.lang.String getExercise();
      /**
       * <code>optional string exercise = 1;</code>
       *
       * <pre>
       *测试运动
       * </pre>
       */
      com.google.protobuf.ByteString
          getExerciseBytes();

      // optional string music = 2;
      /**
       * <code>optional string music = 2;</code>
       *
       * <pre>
       *测试音乐
       * </pre>
       */
      boolean hasMusic();
      /**
       * <code>optional string music = 2;</code>
       *
       * <pre>
       *测试音乐
       * </pre>
       */
      java.lang.String getMusic();
      /**
       * <code>optional string music = 2;</code>
       *
       * <pre>
       *测试音乐
       * </pre>
       */
      com.google.protobuf.ByteString
          getMusicBytes();
    }
    /**
     * Protobuf type {@code ReqTest.Hobby}
     */
    public static final class Hobby extends
        com.google.protobuf.GeneratedMessage
        implements HobbyOrBuilder {
      // Use Hobby.newBuilder() to construct.
      private Hobby(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Hobby(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Hobby defaultInstance;
      public static Hobby getDefaultInstance() {
        return defaultInstance;
      }

      public Hobby getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Hobby(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                exercise_ = input.readBytes();
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                music_ = input.readBytes();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.zhang.sqone.bean.Test.internal_static_ReqTest_Hobby_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.zhang.sqone.bean.Test.internal_static_ReqTest_Hobby_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.zhang.sqone.bean.Test.ReqTest.Hobby.class, com.zhang.sqone.bean.Test.ReqTest.Hobby.Builder.class);
      }

      public static com.google.protobuf.Parser<Hobby> PARSER =
          new com.google.protobuf.AbstractParser<Hobby>() {
        public Hobby parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Hobby(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Hobby> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional string exercise = 1;
      public static final int EXERCISE_FIELD_NUMBER = 1;
      private java.lang.Object exercise_;
      /**
       * <code>optional string exercise = 1;</code>
       *
       * <pre>
       *测试运动
       * </pre>
       */
      public boolean hasExercise() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string exercise = 1;</code>
       *
       * <pre>
       *测试运动
       * </pre>
       */
      public java.lang.String getExercise() {
        java.lang.Object ref = exercise_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            exercise_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string exercise = 1;</code>
       *
       * <pre>
       *测试运动
       * </pre>
       */
      public com.google.protobuf.ByteString
          getExerciseBytes() {
        java.lang.Object ref = exercise_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          exercise_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // optional string music = 2;
      public static final int MUSIC_FIELD_NUMBER = 2;
      private java.lang.Object music_;
      /**
       * <code>optional string music = 2;</code>
       *
       * <pre>
       *测试音乐
       * </pre>
       */
      public boolean hasMusic() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string music = 2;</code>
       *
       * <pre>
       *测试音乐
       * </pre>
       */
      public java.lang.String getMusic() {
        java.lang.Object ref = music_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            music_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string music = 2;</code>
       *
       * <pre>
       *测试音乐
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMusicBytes() {
        java.lang.Object ref = music_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          music_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private void initFields() {
        exercise_ = "";
        music_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getExerciseBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getMusicBytes());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getExerciseBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getMusicBytes());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.zhang.sqone.bean.Test.ReqTest.Hobby parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.zhang.sqone.bean.Test.ReqTest.Hobby parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.zhang.sqone.bean.Test.ReqTest.Hobby parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.zhang.sqone.bean.Test.ReqTest.Hobby parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.zhang.sqone.bean.Test.ReqTest.Hobby parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.zhang.sqone.bean.Test.ReqTest.Hobby parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.zhang.sqone.bean.Test.ReqTest.Hobby parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.zhang.sqone.bean.Test.ReqTest.Hobby parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.zhang.sqone.bean.Test.ReqTest.Hobby parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.zhang.sqone.bean.Test.ReqTest.Hobby parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.zhang.sqone.bean.Test.ReqTest.Hobby prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code ReqTest.Hobby}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements com.zhang.sqone.bean.Test.ReqTest.HobbyOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.zhang.sqone.bean.Test.internal_static_ReqTest_Hobby_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.zhang.sqone.bean.Test.internal_static_ReqTest_Hobby_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.zhang.sqone.bean.Test.ReqTest.Hobby.class, com.zhang.sqone.bean.Test.ReqTest.Hobby.Builder.class);
        }

        // Construct using com.zhang.sqone.bean.Test.ReqTest.Hobby.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          exercise_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          music_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.zhang.sqone.bean.Test.internal_static_ReqTest_Hobby_descriptor;
        }

        public com.zhang.sqone.bean.Test.ReqTest.Hobby getDefaultInstanceForType() {
          return com.zhang.sqone.bean.Test.ReqTest.Hobby.getDefaultInstance();
        }

        public com.zhang.sqone.bean.Test.ReqTest.Hobby build() {
          com.zhang.sqone.bean.Test.ReqTest.Hobby result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.zhang.sqone.bean.Test.ReqTest.Hobby buildPartial() {
          com.zhang.sqone.bean.Test.ReqTest.Hobby result = new com.zhang.sqone.bean.Test.ReqTest.Hobby(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.exercise_ = exercise_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.music_ = music_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.zhang.sqone.bean.Test.ReqTest.Hobby) {
            return mergeFrom((com.zhang.sqone.bean.Test.ReqTest.Hobby)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.zhang.sqone.bean.Test.ReqTest.Hobby other) {
          if (other == com.zhang.sqone.bean.Test.ReqTest.Hobby.getDefaultInstance()) return this;
          if (other.hasExercise()) {
            bitField0_ |= 0x00000001;
            exercise_ = other.exercise_;
            onChanged();
          }
          if (other.hasMusic()) {
            bitField0_ |= 0x00000002;
            music_ = other.music_;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.zhang.sqone.bean.Test.ReqTest.Hobby parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.zhang.sqone.bean.Test.ReqTest.Hobby) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional string exercise = 1;
        private java.lang.Object exercise_ = "";
        /**
         * <code>optional string exercise = 1;</code>
         *
         * <pre>
         *测试运动
         * </pre>
         */
        public boolean hasExercise() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional string exercise = 1;</code>
         *
         * <pre>
         *测试运动
         * </pre>
         */
        public java.lang.String getExercise() {
          java.lang.Object ref = exercise_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            exercise_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string exercise = 1;</code>
         *
         * <pre>
         *测试运动
         * </pre>
         */
        public com.google.protobuf.ByteString
            getExerciseBytes() {
          java.lang.Object ref = exercise_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            exercise_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string exercise = 1;</code>
         *
         * <pre>
         *测试运动
         * </pre>
         */
        public Builder setExercise(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          exercise_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string exercise = 1;</code>
         *
         * <pre>
         *测试运动
         * </pre>
         */
        public Builder clearExercise() {
          bitField0_ = (bitField0_ & ~0x00000001);
          exercise_ = getDefaultInstance().getExercise();
          onChanged();
          return this;
        }
        /**
         * <code>optional string exercise = 1;</code>
         *
         * <pre>
         *测试运动
         * </pre>
         */
        public Builder setExerciseBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          exercise_ = value;
          onChanged();
          return this;
        }

        // optional string music = 2;
        private java.lang.Object music_ = "";
        /**
         * <code>optional string music = 2;</code>
         *
         * <pre>
         *测试音乐
         * </pre>
         */
        public boolean hasMusic() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string music = 2;</code>
         *
         * <pre>
         *测试音乐
         * </pre>
         */
        public java.lang.String getMusic() {
          java.lang.Object ref = music_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            music_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string music = 2;</code>
         *
         * <pre>
         *测试音乐
         * </pre>
         */
        public com.google.protobuf.ByteString
            getMusicBytes() {
          java.lang.Object ref = music_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            music_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string music = 2;</code>
         *
         * <pre>
         *测试音乐
         * </pre>
         */
        public Builder setMusic(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          music_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string music = 2;</code>
         *
         * <pre>
         *测试音乐
         * </pre>
         */
        public Builder clearMusic() {
          bitField0_ = (bitField0_ & ~0x00000002);
          music_ = getDefaultInstance().getMusic();
          onChanged();
          return this;
        }
        /**
         * <code>optional string music = 2;</code>
         *
         * <pre>
         *测试音乐
         * </pre>
         */
        public Builder setMusicBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          music_ = value;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:ReqTest.Hobby)
      }

      static {
        defaultInstance = new Hobby(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:ReqTest.Hobby)
    }

    private int bitField0_;
    // optional string ac = 1;
    public static final int AC_FIELD_NUMBER = 1;
    private java.lang.Object ac_;
    /**
     * <code>optional string ac = 1;</code>
     *
     * <pre>
     *请求标识
     * </pre>
     */
    public boolean hasAc() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string ac = 1;</code>
     *
     * <pre>
     *请求标识
     * </pre>
     */
    public java.lang.String getAc() {
      java.lang.Object ref = ac_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ac_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ac = 1;</code>
     *
     * <pre>
     *请求标识
     * </pre>
     */
    public com.google.protobuf.ByteString
        getAcBytes() {
      java.lang.Object ref = ac_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ac_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string id = 2;
    public static final int ID_FIELD_NUMBER = 2;
    private java.lang.Object id_;
    /**
     * <code>optional string id = 2;</code>
     *
     * <pre>
     *ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string id = 2;</code>
     *
     * <pre>
     *ID
     * </pre>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          id_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string id = 2;</code>
     *
     * <pre>
     *ID
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string stu = 3;
    public static final int STU_FIELD_NUMBER = 3;
    private java.lang.Object stu_;
    /**
     * <code>optional string stu = 3;</code>
     *
     * <pre>
     *请求返回标识
     * </pre>
     */
    public boolean hasStu() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string stu = 3;</code>
     *
     * <pre>
     *请求返回标识
     * </pre>
     */
    public java.lang.String getStu() {
      java.lang.Object ref = stu_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          stu_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string stu = 3;</code>
     *
     * <pre>
     *请求返回标识
     * </pre>
     */
    public com.google.protobuf.ByteString
        getStuBytes() {
      java.lang.Object ref = stu_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        stu_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string scd = 4;
    public static final int SCD_FIELD_NUMBER = 4;
    private java.lang.Object scd_;
    /**
     * <code>optional string scd = 4;</code>
     *
     * <pre>
     *请求结果标识
     * </pre>
     */
    public boolean hasScd() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string scd = 4;</code>
     *
     * <pre>
     *请求结果标识
     * </pre>
     */
    public java.lang.String getScd() {
      java.lang.Object ref = scd_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          scd_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string scd = 4;</code>
     *
     * <pre>
     *请求结果标识
     * </pre>
     */
    public com.google.protobuf.ByteString
        getScdBytes() {
      java.lang.Object ref = scd_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        scd_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string msg = 7;
    public static final int MSG_FIELD_NUMBER = 7;
    private java.lang.Object msg_;
    /**
     * <code>optional string msg = 7;</code>
     *
     * <pre>
     *请求结果消息
     * </pre>
     */
    public boolean hasMsg() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string msg = 7;</code>
     *
     * <pre>
     *请求结果消息
     * </pre>
     */
    public java.lang.String getMsg() {
      java.lang.Object ref = msg_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msg_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string msg = 7;</code>
     *
     * <pre>
     *请求结果消息
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMsgBytes() {
      java.lang.Object ref = msg_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msg_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string sid = 8;
    public static final int SID_FIELD_NUMBER = 8;
    private java.lang.Object sid_;
    /**
     * <code>optional string sid = 8;</code>
     *
     * <pre>
     *请求的用户sid
     * </pre>
     */
    public boolean hasSid() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string sid = 8;</code>
     *
     * <pre>
     *请求的用户sid
     * </pre>
     */
    public java.lang.String getSid() {
      java.lang.Object ref = sid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          sid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string sid = 8;</code>
     *
     * <pre>
     *请求的用户sid
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSidBytes() {
      java.lang.Object ref = sid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string name = 9;
    public static final int NAME_FIELD_NUMBER = 9;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 9;</code>
     *
     * <pre>
     *测试姓名
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string name = 9;</code>
     *
     * <pre>
     *测试姓名
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 9;</code>
     *
     * <pre>
     *测试姓名
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string age = 10;
    public static final int AGE_FIELD_NUMBER = 10;
    private java.lang.Object age_;
    /**
     * <code>optional string age = 10;</code>
     *
     * <pre>
     *测试年龄
     * </pre>
     */
    public boolean hasAge() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string age = 10;</code>
     *
     * <pre>
     *测试年龄
     * </pre>
     */
    public java.lang.String getAge() {
      java.lang.Object ref = age_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          age_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string age = 10;</code>
     *
     * <pre>
     *测试年龄
     * </pre>
     */
    public com.google.protobuf.ByteString
        getAgeBytes() {
      java.lang.Object ref = age_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        age_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .ReqTest.Hobby hobby = 11;
    public static final int HOBBY_FIELD_NUMBER = 11;
    private java.util.List<com.zhang.sqone.bean.Test.ReqTest.Hobby> hobby_;
    /**
     * <code>repeated .ReqTest.Hobby hobby = 11;</code>
     *
     * <pre>
     *测试爱好
     * </pre>
     */
    public java.util.List<com.zhang.sqone.bean.Test.ReqTest.Hobby> getHobbyList() {
      return hobby_;
    }
    /**
     * <code>repeated .ReqTest.Hobby hobby = 11;</code>
     *
     * <pre>
     *测试爱好
     * </pre>
     */
    public java.util.List<? extends com.zhang.sqone.bean.Test.ReqTest.HobbyOrBuilder> 
        getHobbyOrBuilderList() {
      return hobby_;
    }
    /**
     * <code>repeated .ReqTest.Hobby hobby = 11;</code>
     *
     * <pre>
     *测试爱好
     * </pre>
     */
    public int getHobbyCount() {
      return hobby_.size();
    }
    /**
     * <code>repeated .ReqTest.Hobby hobby = 11;</code>
     *
     * <pre>
     *测试爱好
     * </pre>
     */
    public com.zhang.sqone.bean.Test.ReqTest.Hobby getHobby(int index) {
      return hobby_.get(index);
    }
    /**
     * <code>repeated .ReqTest.Hobby hobby = 11;</code>
     *
     * <pre>
     *测试爱好
     * </pre>
     */
    public com.zhang.sqone.bean.Test.ReqTest.HobbyOrBuilder getHobbyOrBuilder(
        int index) {
      return hobby_.get(index);
    }

    private void initFields() {
      ac_ = "";
      id_ = "";
      stu_ = "";
      scd_ = "";
      msg_ = "";
      sid_ = "";
      name_ = "";
      age_ = "";
      hobby_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getAcBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getStuBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getScdBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(7, getMsgBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(8, getSidBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(9, getNameBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(10, getAgeBytes());
      }
      for (int i = 0; i < hobby_.size(); i++) {
        output.writeMessage(11, hobby_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getAcBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getStuBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getScdBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getMsgBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getSidBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getNameBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getAgeBytes());
      }
      for (int i = 0; i < hobby_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, hobby_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.zhang.sqone.bean.Test.ReqTest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.zhang.sqone.bean.Test.ReqTest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.zhang.sqone.bean.Test.ReqTest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.zhang.sqone.bean.Test.ReqTest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.zhang.sqone.bean.Test.ReqTest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.zhang.sqone.bean.Test.ReqTest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.zhang.sqone.bean.Test.ReqTest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.zhang.sqone.bean.Test.ReqTest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.zhang.sqone.bean.Test.ReqTest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.zhang.sqone.bean.Test.ReqTest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.zhang.sqone.bean.Test.ReqTest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ReqTest}
     *
     * <pre>
     *接口测试使用
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.zhang.sqone.bean.Test.ReqTestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.zhang.sqone.bean.Test.internal_static_ReqTest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.zhang.sqone.bean.Test.internal_static_ReqTest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.zhang.sqone.bean.Test.ReqTest.class, com.zhang.sqone.bean.Test.ReqTest.Builder.class);
      }

      // Construct using com.zhang.sqone.bean.Test.ReqTest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getHobbyFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        ac_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        stu_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        scd_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        msg_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        sid_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        age_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        if (hobbyBuilder_ == null) {
          hobby_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          hobbyBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.zhang.sqone.bean.Test.internal_static_ReqTest_descriptor;
      }

      public com.zhang.sqone.bean.Test.ReqTest getDefaultInstanceForType() {
        return com.zhang.sqone.bean.Test.ReqTest.getDefaultInstance();
      }

      public com.zhang.sqone.bean.Test.ReqTest build() {
        com.zhang.sqone.bean.Test.ReqTest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.zhang.sqone.bean.Test.ReqTest buildPartial() {
        com.zhang.sqone.bean.Test.ReqTest result = new com.zhang.sqone.bean.Test.ReqTest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ac_ = ac_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.stu_ = stu_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.scd_ = scd_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.msg_ = msg_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.sid_ = sid_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.age_ = age_;
        if (hobbyBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            hobby_ = java.util.Collections.unmodifiableList(hobby_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.hobby_ = hobby_;
        } else {
          result.hobby_ = hobbyBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.zhang.sqone.bean.Test.ReqTest) {
          return mergeFrom((com.zhang.sqone.bean.Test.ReqTest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.zhang.sqone.bean.Test.ReqTest other) {
        if (other == com.zhang.sqone.bean.Test.ReqTest.getDefaultInstance()) return this;
        if (other.hasAc()) {
          bitField0_ |= 0x00000001;
          ac_ = other.ac_;
          onChanged();
        }
        if (other.hasId()) {
          bitField0_ |= 0x00000002;
          id_ = other.id_;
          onChanged();
        }
        if (other.hasStu()) {
          bitField0_ |= 0x00000004;
          stu_ = other.stu_;
          onChanged();
        }
        if (other.hasScd()) {
          bitField0_ |= 0x00000008;
          scd_ = other.scd_;
          onChanged();
        }
        if (other.hasMsg()) {
          bitField0_ |= 0x00000010;
          msg_ = other.msg_;
          onChanged();
        }
        if (other.hasSid()) {
          bitField0_ |= 0x00000020;
          sid_ = other.sid_;
          onChanged();
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000040;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasAge()) {
          bitField0_ |= 0x00000080;
          age_ = other.age_;
          onChanged();
        }
        if (hobbyBuilder_ == null) {
          if (!other.hobby_.isEmpty()) {
            if (hobby_.isEmpty()) {
              hobby_ = other.hobby_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureHobbyIsMutable();
              hobby_.addAll(other.hobby_);
            }
            onChanged();
          }
        } else {
          if (!other.hobby_.isEmpty()) {
            if (hobbyBuilder_.isEmpty()) {
              hobbyBuilder_.dispose();
              hobbyBuilder_ = null;
              hobby_ = other.hobby_;
              bitField0_ = (bitField0_ & ~0x00000100);
              hobbyBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getHobbyFieldBuilder() : null;
            } else {
              hobbyBuilder_.addAllMessages(other.hobby_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.zhang.sqone.bean.Test.ReqTest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.zhang.sqone.bean.Test.ReqTest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string ac = 1;
      private java.lang.Object ac_ = "";
      /**
       * <code>optional string ac = 1;</code>
       *
       * <pre>
       *请求标识
       * </pre>
       */
      public boolean hasAc() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string ac = 1;</code>
       *
       * <pre>
       *请求标识
       * </pre>
       */
      public java.lang.String getAc() {
        java.lang.Object ref = ac_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ac_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ac = 1;</code>
       *
       * <pre>
       *请求标识
       * </pre>
       */
      public com.google.protobuf.ByteString
          getAcBytes() {
        java.lang.Object ref = ac_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ac_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ac = 1;</code>
       *
       * <pre>
       *请求标识
       * </pre>
       */
      public Builder setAc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        ac_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ac = 1;</code>
       *
       * <pre>
       *请求标识
       * </pre>
       */
      public Builder clearAc() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ac_ = getDefaultInstance().getAc();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ac = 1;</code>
       *
       * <pre>
       *请求标识
       * </pre>
       */
      public Builder setAcBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        ac_ = value;
        onChanged();
        return this;
      }

      // optional string id = 2;
      private java.lang.Object id_ = "";
      /**
       * <code>optional string id = 2;</code>
       *
       * <pre>
       *ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string id = 2;</code>
       *
       * <pre>
       *ID
       * </pre>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string id = 2;</code>
       *
       * <pre>
       *ID
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string id = 2;</code>
       *
       * <pre>
       *ID
       * </pre>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string id = 2;</code>
       *
       * <pre>
       *ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string id = 2;</code>
       *
       * <pre>
       *ID
       * </pre>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        id_ = value;
        onChanged();
        return this;
      }

      // optional string stu = 3;
      private java.lang.Object stu_ = "";
      /**
       * <code>optional string stu = 3;</code>
       *
       * <pre>
       *请求返回标识
       * </pre>
       */
      public boolean hasStu() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string stu = 3;</code>
       *
       * <pre>
       *请求返回标识
       * </pre>
       */
      public java.lang.String getStu() {
        java.lang.Object ref = stu_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          stu_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string stu = 3;</code>
       *
       * <pre>
       *请求返回标识
       * </pre>
       */
      public com.google.protobuf.ByteString
          getStuBytes() {
        java.lang.Object ref = stu_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stu_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string stu = 3;</code>
       *
       * <pre>
       *请求返回标识
       * </pre>
       */
      public Builder setStu(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        stu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string stu = 3;</code>
       *
       * <pre>
       *请求返回标识
       * </pre>
       */
      public Builder clearStu() {
        bitField0_ = (bitField0_ & ~0x00000004);
        stu_ = getDefaultInstance().getStu();
        onChanged();
        return this;
      }
      /**
       * <code>optional string stu = 3;</code>
       *
       * <pre>
       *请求返回标识
       * </pre>
       */
      public Builder setStuBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        stu_ = value;
        onChanged();
        return this;
      }

      // optional string scd = 4;
      private java.lang.Object scd_ = "";
      /**
       * <code>optional string scd = 4;</code>
       *
       * <pre>
       *请求结果标识
       * </pre>
       */
      public boolean hasScd() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string scd = 4;</code>
       *
       * <pre>
       *请求结果标识
       * </pre>
       */
      public java.lang.String getScd() {
        java.lang.Object ref = scd_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          scd_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string scd = 4;</code>
       *
       * <pre>
       *请求结果标识
       * </pre>
       */
      public com.google.protobuf.ByteString
          getScdBytes() {
        java.lang.Object ref = scd_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          scd_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string scd = 4;</code>
       *
       * <pre>
       *请求结果标识
       * </pre>
       */
      public Builder setScd(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        scd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string scd = 4;</code>
       *
       * <pre>
       *请求结果标识
       * </pre>
       */
      public Builder clearScd() {
        bitField0_ = (bitField0_ & ~0x00000008);
        scd_ = getDefaultInstance().getScd();
        onChanged();
        return this;
      }
      /**
       * <code>optional string scd = 4;</code>
       *
       * <pre>
       *请求结果标识
       * </pre>
       */
      public Builder setScdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        scd_ = value;
        onChanged();
        return this;
      }

      // optional string msg = 7;
      private java.lang.Object msg_ = "";
      /**
       * <code>optional string msg = 7;</code>
       *
       * <pre>
       *请求结果消息
       * </pre>
       */
      public boolean hasMsg() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string msg = 7;</code>
       *
       * <pre>
       *请求结果消息
       * </pre>
       */
      public java.lang.String getMsg() {
        java.lang.Object ref = msg_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          msg_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string msg = 7;</code>
       *
       * <pre>
       *请求结果消息
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMsgBytes() {
        java.lang.Object ref = msg_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msg_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string msg = 7;</code>
       *
       * <pre>
       *请求结果消息
       * </pre>
       */
      public Builder setMsg(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        msg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string msg = 7;</code>
       *
       * <pre>
       *请求结果消息
       * </pre>
       */
      public Builder clearMsg() {
        bitField0_ = (bitField0_ & ~0x00000010);
        msg_ = getDefaultInstance().getMsg();
        onChanged();
        return this;
      }
      /**
       * <code>optional string msg = 7;</code>
       *
       * <pre>
       *请求结果消息
       * </pre>
       */
      public Builder setMsgBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        msg_ = value;
        onChanged();
        return this;
      }

      // optional string sid = 8;
      private java.lang.Object sid_ = "";
      /**
       * <code>optional string sid = 8;</code>
       *
       * <pre>
       *请求的用户sid
       * </pre>
       */
      public boolean hasSid() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string sid = 8;</code>
       *
       * <pre>
       *请求的用户sid
       * </pre>
       */
      public java.lang.String getSid() {
        java.lang.Object ref = sid_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          sid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string sid = 8;</code>
       *
       * <pre>
       *请求的用户sid
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSidBytes() {
        java.lang.Object ref = sid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string sid = 8;</code>
       *
       * <pre>
       *请求的用户sid
       * </pre>
       */
      public Builder setSid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        sid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string sid = 8;</code>
       *
       * <pre>
       *请求的用户sid
       * </pre>
       */
      public Builder clearSid() {
        bitField0_ = (bitField0_ & ~0x00000020);
        sid_ = getDefaultInstance().getSid();
        onChanged();
        return this;
      }
      /**
       * <code>optional string sid = 8;</code>
       *
       * <pre>
       *请求的用户sid
       * </pre>
       */
      public Builder setSidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        sid_ = value;
        onChanged();
        return this;
      }

      // optional string name = 9;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 9;</code>
       *
       * <pre>
       *测试姓名
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string name = 9;</code>
       *
       * <pre>
       *测试姓名
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 9;</code>
       *
       * <pre>
       *测试姓名
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 9;</code>
       *
       * <pre>
       *测试姓名
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 9;</code>
       *
       * <pre>
       *测试姓名
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000040);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 9;</code>
       *
       * <pre>
       *测试姓名
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        name_ = value;
        onChanged();
        return this;
      }

      // optional string age = 10;
      private java.lang.Object age_ = "";
      /**
       * <code>optional string age = 10;</code>
       *
       * <pre>
       *测试年龄
       * </pre>
       */
      public boolean hasAge() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string age = 10;</code>
       *
       * <pre>
       *测试年龄
       * </pre>
       */
      public java.lang.String getAge() {
        java.lang.Object ref = age_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          age_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string age = 10;</code>
       *
       * <pre>
       *测试年龄
       * </pre>
       */
      public com.google.protobuf.ByteString
          getAgeBytes() {
        java.lang.Object ref = age_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          age_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string age = 10;</code>
       *
       * <pre>
       *测试年龄
       * </pre>
       */
      public Builder setAge(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        age_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string age = 10;</code>
       *
       * <pre>
       *测试年龄
       * </pre>
       */
      public Builder clearAge() {
        bitField0_ = (bitField0_ & ~0x00000080);
        age_ = getDefaultInstance().getAge();
        onChanged();
        return this;
      }
      /**
       * <code>optional string age = 10;</code>
       *
       * <pre>
       *测试年龄
       * </pre>
       */
      public Builder setAgeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        age_ = value;
        onChanged();
        return this;
      }

      // repeated .ReqTest.Hobby hobby = 11;
      private java.util.List<com.zhang.sqone.bean.Test.ReqTest.Hobby> hobby_ =
        java.util.Collections.emptyList();
      private void ensureHobbyIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          hobby_ = new java.util.ArrayList<com.zhang.sqone.bean.Test.ReqTest.Hobby>(hobby_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.zhang.sqone.bean.Test.ReqTest.Hobby, com.zhang.sqone.bean.Test.ReqTest.Hobby.Builder, com.zhang.sqone.bean.Test.ReqTest.HobbyOrBuilder> hobbyBuilder_;

      /**
       * <code>repeated .ReqTest.Hobby hobby = 11;</code>
       *
       * <pre>
       *测试爱好
       * </pre>
       */
      public java.util.List<com.zhang.sqone.bean.Test.ReqTest.Hobby> getHobbyList() {
        if (hobbyBuilder_ == null) {
          return java.util.Collections.unmodifiableList(hobby_);
        } else {
          return hobbyBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ReqTest.Hobby hobby = 11;</code>
       *
       * <pre>
       *测试爱好
       * </pre>
       */
      public int getHobbyCount() {
        if (hobbyBuilder_ == null) {
          return hobby_.size();
        } else {
          return hobbyBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ReqTest.Hobby hobby = 11;</code>
       *
       * <pre>
       *测试爱好
       * </pre>
       */
      public com.zhang.sqone.bean.Test.ReqTest.Hobby getHobby(int index) {
        if (hobbyBuilder_ == null) {
          return hobby_.get(index);
        } else {
          return hobbyBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ReqTest.Hobby hobby = 11;</code>
       *
       * <pre>
       *测试爱好
       * </pre>
       */
      public Builder setHobby(
          int index, com.zhang.sqone.bean.Test.ReqTest.Hobby value) {
        if (hobbyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHobbyIsMutable();
          hobby_.set(index, value);
          onChanged();
        } else {
          hobbyBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ReqTest.Hobby hobby = 11;</code>
       *
       * <pre>
       *测试爱好
       * </pre>
       */
      public Builder setHobby(
          int index, com.zhang.sqone.bean.Test.ReqTest.Hobby.Builder builderForValue) {
        if (hobbyBuilder_ == null) {
          ensureHobbyIsMutable();
          hobby_.set(index, builderForValue.build());
          onChanged();
        } else {
          hobbyBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ReqTest.Hobby hobby = 11;</code>
       *
       * <pre>
       *测试爱好
       * </pre>
       */
      public Builder addHobby(com.zhang.sqone.bean.Test.ReqTest.Hobby value) {
        if (hobbyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHobbyIsMutable();
          hobby_.add(value);
          onChanged();
        } else {
          hobbyBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ReqTest.Hobby hobby = 11;</code>
       *
       * <pre>
       *测试爱好
       * </pre>
       */
      public Builder addHobby(
          int index, com.zhang.sqone.bean.Test.ReqTest.Hobby value) {
        if (hobbyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHobbyIsMutable();
          hobby_.add(index, value);
          onChanged();
        } else {
          hobbyBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ReqTest.Hobby hobby = 11;</code>
       *
       * <pre>
       *测试爱好
       * </pre>
       */
      public Builder addHobby(
          com.zhang.sqone.bean.Test.ReqTest.Hobby.Builder builderForValue) {
        if (hobbyBuilder_ == null) {
          ensureHobbyIsMutable();
          hobby_.add(builderForValue.build());
          onChanged();
        } else {
          hobbyBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ReqTest.Hobby hobby = 11;</code>
       *
       * <pre>
       *测试爱好
       * </pre>
       */
      public Builder addHobby(
          int index, com.zhang.sqone.bean.Test.ReqTest.Hobby.Builder builderForValue) {
        if (hobbyBuilder_ == null) {
          ensureHobbyIsMutable();
          hobby_.add(index, builderForValue.build());
          onChanged();
        } else {
          hobbyBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ReqTest.Hobby hobby = 11;</code>
       *
       * <pre>
       *测试爱好
       * </pre>
       */
      public Builder addAllHobby(
          java.lang.Iterable<? extends com.zhang.sqone.bean.Test.ReqTest.Hobby> values) {
        if (hobbyBuilder_ == null) {
          ensureHobbyIsMutable();
          super.addAll(values, hobby_);
          onChanged();
        } else {
          hobbyBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ReqTest.Hobby hobby = 11;</code>
       *
       * <pre>
       *测试爱好
       * </pre>
       */
      public Builder clearHobby() {
        if (hobbyBuilder_ == null) {
          hobby_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          hobbyBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ReqTest.Hobby hobby = 11;</code>
       *
       * <pre>
       *测试爱好
       * </pre>
       */
      public Builder removeHobby(int index) {
        if (hobbyBuilder_ == null) {
          ensureHobbyIsMutable();
          hobby_.remove(index);
          onChanged();
        } else {
          hobbyBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ReqTest.Hobby hobby = 11;</code>
       *
       * <pre>
       *测试爱好
       * </pre>
       */
      public com.zhang.sqone.bean.Test.ReqTest.Hobby.Builder getHobbyBuilder(
          int index) {
        return getHobbyFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ReqTest.Hobby hobby = 11;</code>
       *
       * <pre>
       *测试爱好
       * </pre>
       */
      public com.zhang.sqone.bean.Test.ReqTest.HobbyOrBuilder getHobbyOrBuilder(
          int index) {
        if (hobbyBuilder_ == null) {
          return hobby_.get(index);  } else {
          return hobbyBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ReqTest.Hobby hobby = 11;</code>
       *
       * <pre>
       *测试爱好
       * </pre>
       */
      public java.util.List<? extends com.zhang.sqone.bean.Test.ReqTest.HobbyOrBuilder> 
           getHobbyOrBuilderList() {
        if (hobbyBuilder_ != null) {
          return hobbyBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(hobby_);
        }
      }
      /**
       * <code>repeated .ReqTest.Hobby hobby = 11;</code>
       *
       * <pre>
       *测试爱好
       * </pre>
       */
      public com.zhang.sqone.bean.Test.ReqTest.Hobby.Builder addHobbyBuilder() {
        return getHobbyFieldBuilder().addBuilder(
            com.zhang.sqone.bean.Test.ReqTest.Hobby.getDefaultInstance());
      }
      /**
       * <code>repeated .ReqTest.Hobby hobby = 11;</code>
       *
       * <pre>
       *测试爱好
       * </pre>
       */
      public com.zhang.sqone.bean.Test.ReqTest.Hobby.Builder addHobbyBuilder(
          int index) {
        return getHobbyFieldBuilder().addBuilder(
            index, com.zhang.sqone.bean.Test.ReqTest.Hobby.getDefaultInstance());
      }
      /**
       * <code>repeated .ReqTest.Hobby hobby = 11;</code>
       *
       * <pre>
       *测试爱好
       * </pre>
       */
      public java.util.List<com.zhang.sqone.bean.Test.ReqTest.Hobby.Builder> 
           getHobbyBuilderList() {
        return getHobbyFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.zhang.sqone.bean.Test.ReqTest.Hobby, com.zhang.sqone.bean.Test.ReqTest.Hobby.Builder, com.zhang.sqone.bean.Test.ReqTest.HobbyOrBuilder> 
          getHobbyFieldBuilder() {
        if (hobbyBuilder_ == null) {
          hobbyBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.zhang.sqone.bean.Test.ReqTest.Hobby, com.zhang.sqone.bean.Test.ReqTest.Hobby.Builder, com.zhang.sqone.bean.Test.ReqTest.HobbyOrBuilder>(
                  hobby_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          hobby_ = null;
        }
        return hobbyBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:ReqTest)
    }

    static {
      defaultInstance = new ReqTest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ReqTest)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Person_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Person_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Person_PhoneNumber_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Person_PhoneNumber_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ReqTest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ReqTest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ReqTest_Hobby_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ReqTest_Hobby_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\ntest.proto\"\310\001\n\006Person\022\014\n\004name\030\001 \002(\t\022\n\n" +
      "\002id\030\002 \002(\005\022\r\n\005email\030\003 \001(\t\022\"\n\005phone\030\004 \003(\0132" +
      "\023.Person.PhoneNumber\032D\n\013PhoneNumber\022\016\n\006n" +
      "umber\030\001 \002(\t\022%\n\004type\030\002 \001(\0162\021.Person.Phone" +
      "Type:\004HOME\"+\n\tPhoneType\022\n\n\006MOBILE\020\000\022\010\n\004H" +
      "OME\020\001\022\010\n\004WORK\020\002\"\271\001\n\007ReqTest\022\n\n\002ac\030\001 \001(\t\022" +
      "\n\n\002id\030\002 \001(\t\022\013\n\003stu\030\003 \001(\t\022\013\n\003scd\030\004 \001(\t\022\013\n" +
      "\003msg\030\007 \001(\t\022\013\n\003sid\030\010 \001(\t\022\014\n\004name\030\t \001(\t\022\013\n" +
      "\003age\030\n \001(\t\022\035\n\005hobby\030\013 \003(\0132\016.ReqTest.Hobb" +
      "y\032(\n\005Hobby\022\020\n\010exercise\030\001 \001(\t\022\r\n\005music\030\002 ",
      "\001(\tB\026\n\024com.zhang.sqone.bean"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_Person_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_Person_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Person_descriptor,
              new java.lang.String[] { "Name", "Id", "Email", "Phone", });
          internal_static_Person_PhoneNumber_descriptor =
            internal_static_Person_descriptor.getNestedTypes().get(0);
          internal_static_Person_PhoneNumber_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Person_PhoneNumber_descriptor,
              new java.lang.String[] { "Number", "Type", });
          internal_static_ReqTest_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_ReqTest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ReqTest_descriptor,
              new java.lang.String[] { "Ac", "Id", "Stu", "Scd", "Msg", "Sid", "Name", "Age", "Hobby", });
          internal_static_ReqTest_Hobby_descriptor =
            internal_static_ReqTest_descriptor.getNestedTypes().get(0);
          internal_static_ReqTest_Hobby_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ReqTest_Hobby_descriptor,
              new java.lang.String[] { "Exercise", "Music", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
